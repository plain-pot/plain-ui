{"version":3,"sources":["webpack://PlainDoc.[name]/./node_modules/core-js/modules/es6.array.from.js","webpack://PlainDoc.[name]/./node_modules/core-js/modules/es6.regexp.flags.js","webpack://PlainDoc.[name]/./node_modules/core-js/modules/es6.string.iterator.js","webpack://PlainDoc.[name]/./node_modules/core-js/modules/es6.regexp.to-string.js","webpack://PlainDoc.[name]/./src-doc/page/normal/tree.vue?6ecc","webpack://PlainDoc.[name]/./src-doc/page/normal/tree.vue?5a52","webpack://PlainDoc.[name]/src-doc/page/normal/tree.vue","webpack://PlainDoc.[name]/./src-doc/page/normal/tree.vue?84f0","webpack://PlainDoc.[name]/./src-doc/page/normal/tree.vue","webpack://PlainDoc.[name]/./node_modules/core-js/modules/_create-property.js","webpack://PlainDoc.[name]/./node_modules/core-js/modules/es6.string.starts-with.js"],"names":["ctx","$export","toObject","call","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","Array","from","arrayLike","length","result","step","iterator","O","C","this","aLen","arguments","mapfn","undefined","mapping","index","iterFn","next","done","value","flags","f","RegExp","prototype","configurable","get","$at","String","iterated","_t","_i","point","anObject","$flags","DESCRIPTORS","TO_STRING","$toString","define","fn","source","R","concat","name","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","on","$event","$refs","tree1","expandAll","collapseAll","expand","expandSome","showCurrent","expandAndSelect","ref","treeData","onNodeClick","lazyDemo","isLeaf","getChildren","checkTree","checkAll","uncheckAll","check","$message","getCheckedData","map","item","join","time","unCheckStrictTree","checkableTree","isCheckable","scopedSlotDemo","getCurrent","data","staticStyle","scopedSlots","_u","key","_v","_s","e","addItem","deleteItem","renderDemo","renderContent","nodeIcon","model","callback","$$v","filterText","expression","filterNodeMethod","currentTree","currentKey","treeNode","dragTree","style","color","id","charAt","dragAndCheckTree","$plain","log","allowDrag","allowDrop","staticRenderFns","console","$el","querySelectorAll","component","$defineProperty","createDesc","module","exports","object","context","STARTS_WITH","$startsWith","P","startsWith","searchString","that","Math","min","search","slice"],"mappings":"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","file":"js/chunk-89daec42.20cdf93c.js","sourcesContent":["'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"demo-tree\"},[_c('demo-row',{attrs:{\"title\":\"基本用法\"}},[_c('demo-line',[_c('pl-button-group',[_c('pl-button',{attrs:{\"label\":\"全部展开\"},on:{\"click\":function($event){return _vm.$refs.tree1.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部收起\"},on:{\"click\":function($event){return _vm.$refs.tree1.collapseAll()}}}),_c('pl-button',{attrs:{\"label\":\"展开特定节点\"},on:{\"click\":function($event){return _vm.$refs.tree1.expand('2-2-2')}}}),_c('pl-button',{attrs:{\"label\":\"展开部分节点\"},on:{\"click\":_vm.expandSome}}),_c('pl-button',{attrs:{\"label\":\"当前选中节点\"},on:{\"click\":_vm.showCurrent}}),_c('pl-button',{attrs:{\"label\":\"展开并且设置当前选中节点\"},on:{\"click\":_vm.expandAndSelect}})],1)],1),_c('pl-tree',{ref:\"tree1\",attrs:{\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\"},on:{\"node-click\":_vm.onNodeClick}})],1),_c('demo-row',{attrs:{\"title\":\"初始化的时候就渲染所有隐藏的节点，而不是第一次展开的时候才渲染\"}},[_c('pl-tree',{attrs:{\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"renderAfterExpand\":false}})],1),_c('demo-row',{attrs:{\"title\":\"懒加载子节点\"}},[_c('pl-tree',{ref:\"lazyTree\",attrs:{\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"lazy\":\"\",\"isLeaf\":_vm.lazyDemo.isLeaf,\"getChildren\":_vm.lazyDemo.getChildren}})],1),_c('demo-row',{attrs:{\"title\":\"多选\"}},[_c('demo-line',[_c('pl-button-group',[_c('pl-button',{attrs:{\"label\":\"展开所有节点\"},on:{\"click\":function($event){return _vm.$refs.checkTree.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部选中\"},on:{\"click\":function($event){return _vm.$refs.checkTree.checkAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部取消\"},on:{\"click\":function($event){return _vm.$refs.checkTree.uncheckAll()}}}),_c('pl-button',{attrs:{\"label\":\"选中部分数据\"},on:{\"click\":function($event){return _vm.$refs.checkTree.check(['1-1-1','2-2-2'])}}}),_c('pl-button',{attrs:{\"label\":\"获取选中的数据\"},on:{\"click\":function($event){_vm.$message(_vm.$refs.checkTree.getCheckedData().map(function (item){ return item.name; }).join(','),{time:null})}}})],1)],1),_c('pl-tree',{ref:\"checkTree\",attrs:{\"showCheckbox\":\"\",\"checkOnClickNode\":\"\",\"expandOnClickNode\":false,\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\"}})],1),_c('demo-row',{attrs:{\"title\":\"多选：父子互不关联\"}},[_c('demo-line',[_c('pl-button-group',[_c('pl-button',{attrs:{\"label\":\"展开所有节点\"},on:{\"click\":function($event){return _vm.$refs.unCheckStrictTree.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部选中\"},on:{\"click\":function($event){return _vm.$refs.unCheckStrictTree.checkAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部取消\"},on:{\"click\":function($event){return _vm.$refs.unCheckStrictTree.uncheckAll()}}}),_c('pl-button',{attrs:{\"label\":\"选中部分数据\"},on:{\"click\":function($event){return _vm.$refs.unCheckStrictTree.check(['1-1-1','2-2-2'])}}}),_c('pl-button',{attrs:{\"label\":\"获取选中的数据\"},on:{\"click\":function($event){_vm.$message(_vm.$refs.unCheckStrictTree.getCheckedData().map(function (item){ return item.name; }).join(','),{time:null})}}})],1)],1),_c('pl-tree',{ref:\"unCheckStrictTree\",attrs:{\"showCheckbox\":\"\",\"checkOnClickNode\":\"\",\"expandOnClickNode\":false,\"checkStrictly\":\"\",\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\"}})],1),_c('demo-row',{attrs:{\"title\":\"多选：禁用部分选项，只能勾选1结尾的节点\"}},[_c('demo-line',[_c('pl-button-group',[_c('pl-button',{attrs:{\"label\":\"展开所有节点\"},on:{\"click\":function($event){return _vm.$refs.checkableTree.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部选中\"},on:{\"click\":function($event){return _vm.$refs.checkableTree.checkAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部取消\"},on:{\"click\":function($event){return _vm.$refs.checkableTree.uncheckAll()}}}),_c('pl-button',{attrs:{\"label\":\"选中部分数据\"},on:{\"click\":function($event){return _vm.$refs.checkableTree.check(['1-1-1','2-2-2'])}}}),_c('pl-button',{attrs:{\"label\":\"获取选中的数据\"},on:{\"click\":function($event){_vm.$message(_vm.$refs.checkableTree.getCheckedData().map(function (item){ return item.name; }).join(','),{time:null})}}})],1)],1),_c('pl-tree',{ref:\"checkableTree\",attrs:{\"showCheckbox\":\"\",\"checkOnClickNode\":\"\",\"expandOnClickNode\":false,\"data\":_vm.treeData,\"checkStrictly\":\"\",\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"isCheckable\":_vm.isCheckable}})],1),_c('demo-row',{attrs:{\"title\":\"自定义内容：作用域插槽\"}},[_c('demo-line',[_c('pl-button-group',[_c('pl-button',{attrs:{\"label\":\"全部展开\"},on:{\"click\":function($event){return _vm.$refs.scopedSlotDemo.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部收起\"},on:{\"click\":function($event){return _vm.$refs.scopedSlotDemo.collapseAll()}}}),_c('pl-button',{attrs:{\"label\":\"当前选中节点\"},on:{\"click\":function($event){_vm.$message(!!_vm.$refs.scopedSlotDemo.getCurrent() ? _vm.$refs.scopedSlotDemo.getCurrent().data.name : '未选中任何节点！')}}}),_c('pl-button',{attrs:{\"label\":\"获取选中的数据\"},on:{\"click\":function($event){_vm.$message(_vm.$refs.scopedSlotDemo.getCheckedData().map(function (item){ return item.name; }).join(','),{time:null})}}})],1)],1),_c('pl-tree',{ref:\"scopedSlotDemo\",staticStyle:{\"width\":\"500px\"},attrs:{\"data\":_vm.scopedSlotDemo.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"showCheckbox\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(data){return [_c('div',{staticStyle:{\"width\":\"100%\",\"display\":\"flex\",\"justify-content\":\"space-between\"}},[_c('span',[_vm._v(_vm._s(data.data.name))]),_c('pl-button-group',{attrs:{\"mode\":\"text\"}},[_c('pl-button',{attrs:{\"label\":\"Add\",\"size\":\"mini\"},on:{\"click\":function (e){ return _vm.scopedSlotDemo.addItem(e,data); }}}),_c('pl-button',{attrs:{\"label\":\"Del\",\"size\":\"mini\",\"status\":\"error\"},on:{\"click\":function (e){ return _vm.scopedSlotDemo.deleteItem(e,data); }}})],1)],1)]}}])})],1),_c('demo-row',{attrs:{\"title\":\"自定义内容：渲染函数\"}},[_c('demo-line',[_c('pl-button-group',[_c('pl-button',{attrs:{\"label\":\"全部展开\"},on:{\"click\":function($event){return _vm.$refs.renderDemo.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部收起\"},on:{\"click\":function($event){return _vm.$refs.renderDemo.collapseAll()}}}),_c('pl-button',{attrs:{\"label\":\"当前选中节点\"},on:{\"click\":function($event){_vm.$message(!!_vm.$refs.renderDemo.getCurrent() ? _vm.$refs.renderDemo.getCurrent().data.name : '未选中任何节点！')}}}),_c('pl-button',{attrs:{\"label\":\"获取选中的数据\"},on:{\"click\":function($event){_vm.$message(_vm.$refs.renderDemo.getCheckedData().map(function (item){ return item.name; }).join(','),{time:null})}}})],1)],1),_c('pl-tree',{ref:\"renderDemo\",staticStyle:{\"width\":\"500px\"},attrs:{\"data\":_vm.renderDemo.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"showCheckbox\":\"\",\"renderContent\":_vm.renderDemo.renderContent}})],1),_c('demo-row',{attrs:{\"title\":\"节点图标\"}},[_c('pl-tree',{attrs:{\"defaultExpandAll\":\"\",\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"nodeIcon\":_vm.nodeIcon}})],1),_c('demo-row',{attrs:{\"title\":\"手风琴模式，展开节点的时候关闭兄弟节点\"}},[_c('pl-tree',{attrs:{\"according\":\"\",\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\"}})],1),_c('demo-row',{attrs:{\"title\":\"自定义过滤函数\"}},[_c('demo-line',[_c('pl-input',{attrs:{\"suffixIcon\":\"el-icon-search\",\"clearIcon\":\"\"},model:{value:(_vm.filterText),callback:function ($$v) {_vm.filterText=$$v},expression:\"filterText\"}})],1),_c('pl-tree',{attrs:{\"defaultExpandAll\":\"\",\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"filterNodeMethod\":_vm.filterNodeMethod}})],1),_c('demo-row',{attrs:{\"title\":\"绑定currentKey\"}},[_c('demo-line',[_c('pl-button',{attrs:{\"label\":\"全部展开\"},on:{\"click\":function($event){return _vm.$refs.currentTree.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"设置currentKey\"},on:{\"click\":function($event){_vm.currentKey = '3-1-1'}}}),_vm._v(\"\\n            \"+_vm._s(_vm.currentKey)+\"\\n        \")],1),_c('pl-tree',{ref:\"currentTree\",attrs:{\"currentKey\":_vm.currentKey,\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\"},on:{\"current-change\":function (treeNode){ return _vm.currentKey = treeNode.key; }}})],1),_c('demo-row',{attrs:{\"title\":\"展开图标\"}},[_c('pl-tree',{attrs:{\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"expandIcon\":\"el-icon-caret-right\"}})],1),_c('demo-row',{attrs:{\"title\":\"拖拽节点\"}},[_c('demo-line',[_c('pl-button',{attrs:{\"label\":\"全部展开\"},on:{\"click\":function($event){return _vm.$refs.dragTree.expandAll()}}})],1),_c('pl-tree',{ref:\"dragTree\",attrs:{\"data\":_vm.treeData,\"defaultExpandAll\":\"\",\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"draggable\":\"\",\"showCheckbox\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('span',{style:({color:data.id.charAt(0) === '1'?'#12b4a5':(data.id.charAt(0) === '2'?'#00CC00':'#F38585')})},[_vm._v(_vm._s(data.name))])]}}])})],1),_c('demo-row',{attrs:{\"title\":\"拖拽节点+可勾选\"}},[_c('demo-line',[_c('pl-button',{attrs:{\"label\":\"全部展开\"},on:{\"click\":function($event){return _vm.$refs.dragAndCheckTree.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"打印数据\"},on:{\"click\":function($event){return _vm.$plain.log(_vm.treeData)}}}),_c('pl-button',{attrs:{\"label\":\"获取选中的数据\"},on:{\"click\":function($event){_vm.$message(_vm.$refs.dragAndCheckTree.getCheckedData().map(function (item){ return item.name; }).join(','),{time:null})}}})],1),_c('ol',[_c('li',[_vm._v(\"父子关联模式下，拖拽节点可能会引起 选中/取消选中 事件\")]),_c('li',[_vm._v(\"拖拽节点会刷新节点的状态，每个节点会先判断子节点是否全都选中，全部选中并且自身未选中的情况下，会选中自身\")]),_c('li',[_vm._v(\"自身选中，但是存在子节点未选中的情况下，会取消选中自身\")]),_c('li',[_vm._v(\"非父子关联模式下，拖拽节点不会导致节点选中状态变化\")])]),_c('pl-tree',{ref:\"dragAndCheckTree\",attrs:{\"data\":_vm.treeData,\"defaultExpandAll\":\"\",\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"showCheckbox\":\"\",\"draggable\":\"\"}})],1),_c('demo-row',{attrs:{\"title\":\"拖拽节点：可拖拽allowDrag以及可放置allowDrop\"}},[_c('ol',[_c('li',[_vm._v(\"2-2开头的id不能被拖拽\")]),_c('li',[_vm._v(\"3开头的id不能放置任何节点\")])]),_c('pl-tree',{ref:\"dragTree\",attrs:{\"data\":_vm.treeData,\"defaultExpandAll\":\"\",\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"draggable\":\"\",\"allowDrag\":_vm.allowDrag,\"allowDrop\":_vm.allowDrop}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"demo-tree\">\r\n        <demo-row title=\"基本用法\">\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"全部展开\" @click=\"$refs.tree1.expandAll()\"/>\r\n                    <pl-button label=\"全部收起\" @click=\"$refs.tree1.collapseAll()\"/>\r\n                    <pl-button label=\"展开特定节点\" @click=\"$refs.tree1.expand('2-2-2')\"/>\r\n                    <pl-button label=\"展开部分节点\" @click=\"expandSome\"/>\r\n                    <pl-button label=\"当前选中节点\" @click=\"showCurrent\"/>\r\n                    <pl-button label=\"展开并且设置当前选中节点\" @click=\"expandAndSelect\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n            <pl-tree ref=\"tree1\"\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     @node-click=\"onNodeClick\"/>\r\n        </demo-row>\r\n        <demo-row title=\"初始化的时候就渲染所有隐藏的节点，而不是第一次展开的时候才渲染\">\r\n            <pl-tree :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     :renderAfterExpand=\"false\"/>\r\n        </demo-row>\r\n        <demo-row title=\"懒加载子节点\">\r\n            <pl-tree ref=\"lazyTree\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     lazy\r\n                     :isLeaf=\"lazyDemo.isLeaf\"\r\n                     :getChildren=\"lazyDemo.getChildren\"\r\n            />\r\n        </demo-row>\r\n        <demo-row title=\"多选\">\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"展开所有节点\" @click=\"$refs.checkTree.expandAll()\"/>\r\n                    <pl-button label=\"全部选中\" @click=\"$refs.checkTree.checkAll()\"/>\r\n                    <pl-button label=\"全部取消\" @click=\"$refs.checkTree.uncheckAll()\"/>\r\n                    <pl-button label=\"选中部分数据\" @click=\"$refs.checkTree.check(['1-1-1','2-2-2'])\"/>\r\n                    <pl-button label=\"获取选中的数据\" @click=\"$message($refs.checkTree.getCheckedData().map(item=>item.name).join(','),{time:null})\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n            <pl-tree ref=\"checkTree\"\r\n                     showCheckbox\r\n                     checkOnClickNode\r\n                     :expandOnClickNode=\"false\"\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"多选：父子互不关联\">\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"展开所有节点\" @click=\"$refs.unCheckStrictTree.expandAll()\"/>\r\n                    <pl-button label=\"全部选中\" @click=\"$refs.unCheckStrictTree.checkAll()\"/>\r\n                    <pl-button label=\"全部取消\" @click=\"$refs.unCheckStrictTree.uncheckAll()\"/>\r\n                    <pl-button label=\"选中部分数据\" @click=\"$refs.unCheckStrictTree.check(['1-1-1','2-2-2'])\"/>\r\n                    <pl-button label=\"获取选中的数据\" @click=\"$message($refs.unCheckStrictTree.getCheckedData().map(item=>item.name).join(','),{time:null})\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n            <pl-tree ref=\"unCheckStrictTree\"\r\n                     showCheckbox\r\n                     checkOnClickNode\r\n                     :expandOnClickNode=\"false\"\r\n                     checkStrictly\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"多选：禁用部分选项，只能勾选1结尾的节点\">\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"展开所有节点\" @click=\"$refs.checkableTree.expandAll()\"/>\r\n                    <pl-button label=\"全部选中\" @click=\"$refs.checkableTree.checkAll()\"/>\r\n                    <pl-button label=\"全部取消\" @click=\"$refs.checkableTree.uncheckAll()\"/>\r\n                    <pl-button label=\"选中部分数据\" @click=\"$refs.checkableTree.check(['1-1-1','2-2-2'])\"/>\r\n                    <pl-button label=\"获取选中的数据\" @click=\"$message($refs.checkableTree.getCheckedData().map(item=>item.name).join(','),{time:null})\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n            <pl-tree ref=\"checkableTree\"\r\n                     showCheckbox\r\n                     checkOnClickNode\r\n                     :expandOnClickNode=\"false\"\r\n                     :data=\"treeData\"\r\n                     checkStrictly\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     :isCheckable=\"isCheckable\"/>\r\n        </demo-row>\r\n\r\n\r\n        <demo-row title=\"自定义内容：作用域插槽\">\r\n\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"全部展开\" @click=\"$refs.scopedSlotDemo.expandAll()\"/>\r\n                    <pl-button label=\"全部收起\" @click=\"$refs.scopedSlotDemo.collapseAll()\"/>\r\n                    <pl-button label=\"当前选中节点\" @click=\"$message(!!$refs.scopedSlotDemo.getCurrent() ? $refs.scopedSlotDemo.getCurrent().data.name : '未选中任何节点！')\"/>\r\n                    <pl-button label=\"获取选中的数据\" @click=\"$message($refs.scopedSlotDemo.getCheckedData().map(item=>item.name).join(','),{time:null})\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n\r\n            <pl-tree ref=\"scopedSlotDemo\"\r\n                     :data=\"scopedSlotDemo.treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     style=\"width: 500px\"\r\n                     showCheckbox>\r\n                <template slot-scope=\"data\">\r\n                    <div style=\"width:100%;display: flex;justify-content: space-between\">\r\n                        <span>{{data.data.name}}</span>\r\n                        <pl-button-group mode=\"text\">\r\n                            <pl-button label=\"Add\" @click=\"e=>scopedSlotDemo.addItem(e,data)\" size=\"mini\"/>\r\n                            <pl-button label=\"Del\" @click=\"e=>scopedSlotDemo.deleteItem(e,data)\" size=\"mini\" status=\"error\"/>\r\n                        </pl-button-group>\r\n                    </div>\r\n                </template>\r\n            </pl-tree>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"自定义内容：渲染函数\">\r\n\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"全部展开\" @click=\"$refs.renderDemo.expandAll()\"/>\r\n                    <pl-button label=\"全部收起\" @click=\"$refs.renderDemo.collapseAll()\"/>\r\n                    <pl-button label=\"当前选中节点\" @click=\"$message(!!$refs.renderDemo.getCurrent() ? $refs.renderDemo.getCurrent().data.name : '未选中任何节点！')\"/>\r\n                    <pl-button label=\"获取选中的数据\" @click=\"$message($refs.renderDemo.getCheckedData().map(item=>item.name).join(','),{time:null})\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n\r\n            <pl-tree ref=\"renderDemo\"\r\n                     :data=\"renderDemo.treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     style=\"width: 500px\"\r\n                     showCheckbox\r\n                     :renderContent=\"renderDemo.renderContent\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"节点图标\">\r\n            <pl-tree defaultExpandAll\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     :nodeIcon=\"nodeIcon\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"手风琴模式，展开节点的时候关闭兄弟节点\">\r\n            <pl-tree according\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"自定义过滤函数\">\r\n            <demo-line>\r\n                <pl-input v-model=\"filterText\" suffixIcon=\"el-icon-search\" clearIcon/>\r\n            </demo-line>\r\n            <pl-tree defaultExpandAll\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     :filterNodeMethod=\"filterNodeMethod\"/>\r\n        </demo-row>\r\n        <demo-row title=\"绑定currentKey\">\r\n            <demo-line>\r\n                <pl-button label=\"全部展开\" @click=\"$refs.currentTree.expandAll()\"/>\r\n                <pl-button label=\"设置currentKey\" @click=\"currentKey = '3-1-1'\"/>\r\n                {{currentKey}}\r\n            </demo-line>\r\n            <pl-tree ref=\"currentTree\"\r\n                     :currentKey=\"currentKey\"\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     @current-change=\"treeNode=>currentKey = treeNode.key\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"展开图标\">\r\n            <pl-tree\r\n                    :data=\"treeData\"\r\n                    keyField=\"id\"\r\n                    labelField=\"name\"\r\n                    childrenField=\"subs\"\r\n                    expandIcon=\"el-icon-caret-right\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"拖拽节点\">\r\n            <demo-line>\r\n                <pl-button label=\"全部展开\" @click=\"$refs.dragTree.expandAll()\"/>\r\n            </demo-line>\r\n            <pl-tree\r\n                    ref=\"dragTree\"\r\n                    :data=\"treeData\"\r\n                    defaultExpandAll\r\n                    keyField=\"id\"\r\n                    labelField=\"name\"\r\n                    childrenField=\"subs\"\r\n                    draggable\r\n                    showCheckbox\r\n            >\r\n                <template slot-scope=\"{data}\">\r\n                    <span :style=\"{color:data.id.charAt(0) === '1'?'#12b4a5':(data.id.charAt(0) === '2'?'#00CC00':'#F38585')}\">{{data.name}}</span>\r\n                </template>\r\n            </pl-tree>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"拖拽节点+可勾选\">\r\n            <demo-line>\r\n                <pl-button label=\"全部展开\" @click=\"$refs.dragAndCheckTree.expandAll()\"/>\r\n                <pl-button label=\"打印数据\" @click=\"$plain.log(treeData)\"/>\r\n                <pl-button label=\"获取选中的数据\" @click=\"$message($refs.dragAndCheckTree.getCheckedData().map(item=>item.name).join(','),{time:null})\"/>\r\n            </demo-line>\r\n            <ol>\r\n                <li>父子关联模式下，拖拽节点可能会引起 选中/取消选中 事件</li>\r\n                <li>拖拽节点会刷新节点的状态，每个节点会先判断子节点是否全都选中，全部选中并且自身未选中的情况下，会选中自身</li>\r\n                <li>自身选中，但是存在子节点未选中的情况下，会取消选中自身</li>\r\n                <li>非父子关联模式下，拖拽节点不会导致节点选中状态变化</li>\r\n            </ol>\r\n            <pl-tree\r\n                    ref=\"dragAndCheckTree\"\r\n                    :data=\"treeData\"\r\n                    defaultExpandAll\r\n                    keyField=\"id\"\r\n                    labelField=\"name\"\r\n                    childrenField=\"subs\"\r\n                    showCheckbox\r\n                    draggable/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"拖拽节点：可拖拽allowDrag以及可放置allowDrop\">\r\n            <ol>\r\n                <li>2-2开头的id不能被拖拽</li>\r\n                <li>3开头的id不能放置任何节点</li>\r\n            </ol>\r\n            <pl-tree\r\n                    ref=\"dragTree\"\r\n                    :data=\"treeData\"\r\n                    defaultExpandAll\r\n                    keyField=\"id\"\r\n                    labelField=\"name\"\r\n                    childrenField=\"subs\"\r\n                    draggable\r\n                    :allowDrag=\"allowDrag\"\r\n                    :allowDrop=\"allowDrop\"\r\n            />\r\n        </demo-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"tree\",\r\n        props: {},\r\n        data() {\r\n            const treeData = [\r\n                {\r\n                    id: '1',\r\n                    name: '一级 1',\r\n                    subs: [{\r\n                        id: '1-1',\r\n                        name: '二级 1-1',\r\n                        subs: [{\r\n                            id: '1-1-1',\r\n                            name: '三级 1-1-1'\r\n                        }]\r\n                    }]\r\n                }, {\r\n                    id: '2',\r\n                    name: '一级 2',\r\n                    subs: [{\r\n                        id: '2-1',\r\n                        name: '二级 2-1',\r\n                        subs: [{\r\n                            id: '2-1-1',\r\n                            name: '三级 2-1-1'\r\n                        }]\r\n                    }, {\r\n                        id: '2-2',\r\n                        name: '二级 2-2',\r\n                        subs: [{\r\n                            id: '2-2-1',\r\n                            name: '三级 2-2-1'\r\n                        }, {\r\n                            id: '2-2-2',\r\n                            name: '三级 2-2-2'\r\n                        }]\r\n                    }]\r\n                }, {\r\n                    id: '3',\r\n                    name: '一级 3',\r\n                    subs: [{\r\n                        id: '3-1',\r\n                        name: '二级 3-1',\r\n                        subs: [{\r\n                            id: '3-1-1',\r\n                            name: '三级 3-1-1'\r\n                        }, {\r\n                            id: '3-1-2',\r\n                            name: '三级 3-1-2'\r\n                        }]\r\n                    }, {\r\n                        id: '3-2',\r\n                        name: '二级 3-2',\r\n                        subs: [{\r\n                            id: '3-2-1',\r\n                            name: '三级 3-2-1'\r\n                        }]\r\n                    }]\r\n                }]\r\n            return {\r\n                filterText: null,\r\n                treeData,\r\n                lazyDemo: {\r\n                    isLeaf: (treeNode) => {\r\n                        return treeNode.level >= 3\r\n                    },\r\n                    getChildren: (treeNode, resolve) => {\r\n                        switch (treeNode.level) {\r\n                            case 0:\r\n                                // 加载一级数据\r\n                                this.lazyDemo.getCitiesByParentId(null).then(resolve)\r\n                                break\r\n                            case 1:\r\n                                // 加载二级数据\r\n                                this.lazyDemo.getCitiesByParentId(treeNode.data.id).then(resolve)\r\n                                break\r\n                            case 2:\r\n                                // 加载三级数据\r\n                                this.lazyDemo.getCitiesByParentId(treeNode.data.id).then(resolve)\r\n                                break\r\n                            default:\r\n                                return null\r\n                        }\r\n                    },\r\n                    getCitiesByParentId(parentId) {\r\n                        return new Promise((resolve) => {\r\n                            // 这个是模拟在数据库表中的数据\r\n                            const data = [\r\n                                {id: '1', name: '广东省', parentId: null, subs: []},\r\n                                {id: '2', name: '佛山市', parentId: '1', subs: []},\r\n                                {id: '3', name: '深圳市', parentId: '1', subs: []},\r\n                                {id: '4', name: '禅城区', parentId: '2', subs: []},\r\n                                {id: '5', name: '南山区', parentId: '3', subs: []},\r\n\r\n                                {id: '6', name: '湖南省', parentId: null, subs: []},\r\n                                {id: '7', name: '长沙市', parentId: '6', subs: []},\r\n                                {id: '8', name: '邵阳市', parentId: '6', subs: []},\r\n                                {id: '9', name: '天心区', parentId: '7', subs: []},\r\n\r\n                                {id: '11', name: '陕西省', parentId: null, subs: []},\r\n                            ]\r\n\r\n                            // 模拟请求，请求时间大概在1s-2s之间\r\n                            setTimeout(() => {\r\n                                resolve(data.filter(item => item.parentId === parentId))\r\n                            }, Math.random() * 1000 + 1000)\r\n                        })\r\n                    },\r\n                },\r\n                scopedSlotDemo: {\r\n                    treeData: this.$plain.utils.deepcopy(treeData),\r\n                    renderContent: (h, data) => {\r\n                        return (\r\n                            <div style=\"width:100%;display: flex;justify-content: space-between\">\r\n                                <span>{data.data.name}}</span>\r\n                                <pl-button-group mode=\"text\">\r\n                                    <pl-button label=\"Add\" onClick={e => {\r\n                                        e.stopPropagation();\r\n                                        this.scopedSlotDemo.addItem(data)\r\n                                    }} size=\"mini\"/>\r\n                                    <pl-button label=\"Del\" onClick={e => {\r\n                                        e.stopPropagation();\r\n                                        this.scopedSlotDemo.deleteItem(data)\r\n                                    }} size=\"mini\" status=\"error\"/>\r\n                                </pl-button-group>\r\n                            </div>\r\n                        )\r\n                    },\r\n                    addItem: (e, treeNode) => {\r\n                        e.stopPropagation()\r\n                        const {data} = treeNode\r\n                        const subs = data.subs || []\r\n\r\n                        const name = `n-${data.id}-${subs.length + 1}`\r\n                        const id = name + Date.now().toString()\r\n                        subs.push({\r\n                            id,\r\n                            name: `new item ${name}`,\r\n                        })\r\n                        this.$set(data, 'subs', subs)\r\n                        this.$nextTick(() => this.$refs.scopedSlotDemo.expand(id))\r\n                    },\r\n                    deleteItem: (e, treeNode) => {\r\n                        e.stopPropagation()\r\n                        let {data, parent} = treeNode\r\n                        const subs = !!parent ? parent.data.subs : this.treeData\r\n                        subs.splice(subs.indexOf(data), 1)\r\n                    },\r\n                },\r\n                renderDemo: {\r\n                    treeData: this.$plain.utils.deepcopy(treeData),\r\n                    renderContent: (h, data) => {\r\n                        return (\r\n                            <div style=\"width:100%;display: flex;justify-content: space-between\">\r\n                                <span>{data.data.name}</span>\r\n                                <pl-button-group mode=\"text\">\r\n                                    <pl-button label=\"Add\" onClick={e => this.renderDemo.addItem(e, data)} size=\"mini\"/>\r\n                                    <pl-button label=\"Del\" onClick={e => this.renderDemo.deleteItem(e, data)} size=\"mini\" status=\"error\"/>\r\n                                </pl-button-group>\r\n                            </div>\r\n                        )\r\n                    },\r\n                    addItem: (e, treeNode) => {\r\n                        e.stopPropagation()\r\n                        const {data} = treeNode\r\n                        const subs = data.subs || []\r\n\r\n                        const name = `n-${data.id}-${subs.length + 1}`\r\n                        const id = name + Date.now().toString()\r\n                        subs.push({\r\n                            id,\r\n                            name: `new item ${name}`,\r\n                        })\r\n                        this.$set(data, 'subs', subs)\r\n                        this.$nextTick(() => this.$refs.renderDemo.expand(id))\r\n                    },\r\n                    deleteItem: (e, treeNode) => {\r\n                        e.stopPropagation()\r\n                        let {data, parent} = treeNode\r\n                        const subs = !!parent ? parent.data.subs : this.treeData\r\n                        subs.splice(subs.indexOf(data), 1)\r\n                    },\r\n                },\r\n                currentKey: null,\r\n            }\r\n        },\r\n        methods: {\r\n            onNodeClick(treeNode) {\r\n                console.log(treeNode.data.name)\r\n            },\r\n            showCurrent() {\r\n                let current = this.$refs.tree1.getCurrent()\r\n                this.$message(!!current ? current.data.name : '未选中任何节点！')\r\n            },\r\n            expandAndSelect() {\r\n                this.$refs.tree1.expand('2-2-2')\r\n                this.$refs.tree1.setCurrent('2-2-2')\r\n            },\r\n            async expandSome() {\r\n                // console.log('start')\r\n                await this.$refs.tree1.expand(['2-2-2', '3-1-2'])\r\n                // console.log('end')\r\n                console.log(Array.from(this.$el.querySelectorAll('.pl-tree-node')).length)\r\n            },\r\n            filterNodeMethod(treeNode) {\r\n                const data = treeNode.data\r\n                if (!this.filterText) return true;\r\n                return data.name.indexOf(this.filterText) !== -1;\r\n            },\r\n            isCheckable(treeNode) {\r\n                return treeNode.label.endsWith('1')\r\n            },\r\n            nodeIcon(treeNode) {\r\n                return treeNode.isLeaf ? 'el-icon-document' : 'el-icon-folder-opened'\r\n            },\r\n            allowDrag(dragTreeNode, event) {\r\n                // 2-2开头的id不能被拖拽\r\n                return !dragTreeNode.data.id.startsWith('2-2')\r\n            },\r\n            allowDrop(dragTreeNode, dropTreeNode, dragType, event) {\r\n                // 3-开头的id不能放置任何节点\r\n                return !dropTreeNode.data.id.startsWith('3')\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .demo-tree {\r\n        .demo-row-content {\r\n            /*width: 300px;*/\r\n        }\r\n    }\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./tree.vue?vue&type=template&id=30a1a61f&\"\nimport script from \"./tree.vue?vue&type=script&lang=js&\"\nexport * from \"./tree.vue?vue&type=script&lang=js&\"\nimport style0 from \"./tree.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n"],"sourceRoot":""}
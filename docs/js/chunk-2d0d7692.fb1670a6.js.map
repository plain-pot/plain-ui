{"version":3,"sources":["webpack:///./src-doc/page/normal/cascade.vue?9ba8","webpack:///src-doc/page/normal/cascade.vue","webpack:///./src-doc/page/normal/cascade.vue?7c53","webpack:///./src-doc/page/normal/cascade.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","_s","val","treeData","model","value","callback","$$v","$set","expression","lazyDemo","isLeaf","getChildren","nodeDisabled","scopedSlots","_u","key","fn","ref","node","index","renderContent","filterText","filterMethod","on","$event","test0","toggle","lazyTest","$plain","log","formData","level1Key","level2Key","level3Key","showFormat","onCascadeChange","data","name","flag","disabled","readonly","staticRenderFns","component"],"mappings":"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","file":"js/chunk-2d0d7692.fb1670a6.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"demo-cascade\"},[_c('demo-row',{attrs:{\"title\":\"cascade-panel\"}},[_c('demo-row',{attrs:{\"title\":\"cascade-panel\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[0])+\"\\n            \")]),_c('pl-cascade-panel',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\"},model:{value:(_vm.val[0]),callback:function ($$v) {_vm.$set(_vm.val, 0, $$v)},expression:\"val[0]\"}})],1),_c('demo-row',{attrs:{\"title\":\"cascade-panel: 懒加载\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[1])+\"\\n            \")]),_c('pl-cascade-panel',{attrs:{\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\",\"lazy\":\"\",\"isLeaf\":_vm.lazyDemo.isLeaf,\"getChildren\":_vm.lazyDemo.getChildren},model:{value:(_vm.val[1]),callback:function ($$v) {_vm.$set(_vm.val, 1, $$v)},expression:\"val[1]\"}})],1),_c('demo-row',{attrs:{\"title\":\"cascade-panel: 懒加载，有默认值\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[11])+\"\\n            \")]),_c('pl-cascade-panel',{attrs:{\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\",\"lazy\":\"\",\"isLeaf\":_vm.lazyDemo.isLeaf,\"getChildren\":_vm.lazyDemo.getChildren},model:{value:(_vm.val[11]),callback:function ($$v) {_vm.$set(_vm.val, 11, $$v)},expression:\"val[11]\"}})],1),_c('demo-row',{attrs:{\"title\":\"cascade-panel: init value\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[2])+\"\\n            \")]),_c('pl-cascade-panel',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\"},model:{value:(_vm.val[2]),callback:function ($$v) {_vm.$set(_vm.val, 2, $$v)},expression:\"val[2]\"}})],1),_c('demo-row',{attrs:{\"title\":\"cascade-panel:hover 触发器\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[3])+\"\\n            \")]),_c('pl-cascade-panel',{attrs:{\"trigger\":\"hover\",\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\"},model:{value:(_vm.val[3]),callback:function ($$v) {_vm.$set(_vm.val, 3, $$v)},expression:\"val[3]\"}})],1),_c('demo-row',{attrs:{\"title\":\"cascade-panel:禁用部分选项\"}},[_c('demo-line',[_vm._v(\"\\n                禁用掉叶子节点，并且节点名称中含有[2]的节点\\n            \")]),_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[4])+\"\\n            \")]),_c('pl-cascade-panel',{attrs:{\"nodeDisabled\":_vm.nodeDisabled,\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\"},model:{value:(_vm.val[4]),callback:function ($$v) {_vm.$set(_vm.val, 4, $$v)},expression:\"val[4]\"}})],1),_c('demo-row',{attrs:{\"title\":\"cascade-panel:自定义内容-作用域插槽\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[5])+\"\\n            \")]),_c('pl-cascade-panel',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar node = ref.node;\nvar index = ref.index;\nreturn [_c('cascade-item',{attrs:{\"node\":node,\"index\":index}})]}}]),model:{value:(_vm.val[5]),callback:function ($$v) {_vm.$set(_vm.val, 5, $$v)},expression:\"val[5]\"}})],1),_c('demo-row',{attrs:{\"title\":\"cascade-panel:自定义内容-渲染函数\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[5])+\"\\n            \")]),_c('pl-cascade-panel',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\",\"renderContent\":_vm.renderContent},model:{value:(_vm.val[5]),callback:function ($$v) {_vm.$set(_vm.val, 5, $$v)},expression:\"val[5]\"}})],1),_c('demo-row',{attrs:{\"title\":\"cascade-panel:点击分支的时候也能触发change\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[6])+\"\\n            \")]),_c('pl-cascade-panel',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\",\"selectBranch\":\"\"},model:{value:(_vm.val[6]),callback:function ($$v) {_vm.$set(_vm.val, 6, $$v)},expression:\"val[6]\"}})],1),_c('demo-row',{attrs:{\"title\":\"cascade-panel:筛选文本以及自定义筛选函数\"}},[_c('demo-line',[_c('pl-input',{model:{value:(_vm.filterText),callback:function ($$v) {_vm.filterText=$$v},expression:\"filterText\"}})],1),_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[6])+\"\\n            \")]),_c('pl-cascade-panel',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\",\"filterText\":_vm.filterText,\"filterMethod\":_vm.filterMethod},model:{value:(_vm.val[6]),callback:function ($$v) {_vm.$set(_vm.val, 6, $$v)},expression:\"val[6]\"}})],1)],1),_c('demo-row',{attrs:{\"title\":\"cascade-service\"}},[_c('demo-row',{attrs:{\"title\":\"cascade service：基本用法\"}},[_c('pl-button',{ref:\"test0\",attrs:{\"label\":\"open cascade\"},on:{\"click\":function($event){return _vm.test0.toggle()}}})],1),_c('demo-row',{attrs:{\"title\":\"cascade service：懒加载\"}},[_c('pl-button',{ref:\"lazyTest\",attrs:{\"label\":\"open cascade\"},on:{\"click\":function($event){return _vm.lazyTest.toggle()}}})],1)],1),_c('demo-row',{attrs:{\"title\":\"pl-cascade\"}},[_c('demo-row',{attrs:{\"title\":\"基本用法\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[7])+\"\\n            \")]),_c('pl-cascade',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\"},on:{\"focus\":function($event){return _vm.$plain.log('focus')},\"blur\":function($event){return _vm.$plain.log('blur')}},model:{value:(_vm.val[7]),callback:function ($$v) {_vm.$set(_vm.val, 7, $$v)},expression:\"val[7]\"}})],1),_c('demo-row',{attrs:{\"title\":\"禁用选项\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[7])+\"\\n            \")]),_c('pl-cascade',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\",\"nodeDisabled\":_vm.nodeDisabled},model:{value:(_vm.val[7]),callback:function ($$v) {_vm.$set(_vm.val, 7, $$v)},expression:\"val[7]\"}})],1),_c('demo-row',{attrs:{\"title\":\"只显示最后一级文本\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[8])+\"\\n            \")]),_c('pl-cascade',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\",\"showLast\":\"\"},model:{value:(_vm.val[8]),callback:function ($$v) {_vm.$set(_vm.val, 8, $$v)},expression:\"val[8]\"}})],1),_c('demo-row',{attrs:{\"title\":\"可以选择分支（可以选择非叶子节点）\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[9])+\"\\n            \")]),_c('pl-cascade',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\",\"selectBranch\":\"\"},model:{value:(_vm.val[9]),callback:function ($$v) {_vm.$set(_vm.val, 9, $$v)},expression:\"val[9]\"}})],1),_c('demo-row',{attrs:{\"title\":\"动态加载\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.formData)+\"\\n            \")]),_c('pl-cascade',{attrs:{\"value\":[_vm.formData.level1Key,_vm.formData.level2Key,_vm.formData.level3Key],\"showFormat\":_vm.showFormat,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\",\"lazy\":\"\",\"getChildren\":_vm.lazyDemo.getChildren,\"isLeaf\":_vm.lazyDemo.isLeaf},on:{\"change\":_vm.onCascadeChange}}),_c('pl-cascade',{attrs:{\"value\":[_vm.formData.level1Key,_vm.formData.level2Key,_vm.formData.level3Key],\"showFormat\":_vm.showFormat,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\",\"lazy\":\"\",\"getChildren\":_vm.lazyDemo.getChildren,\"isLeaf\":_vm.lazyDemo.isLeaf},on:{\"change\":_vm.onCascadeChange}})],1),_c('demo-row',{attrs:{\"title\":\"输入筛选\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[10])+\"\\n            \")]),_c('pl-cascade',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\",\"filterable\":\"\"},model:{value:(_vm.val[10]),callback:function ($$v) {_vm.$set(_vm.val, 10, $$v)},expression:\"val[10]\"}})],1),_c('demo-row',{attrs:{\"title\":\"自定义节点内容\"}},[_c('demo-line',[_vm._v(\"\\n                \"+_vm._s(_vm.val[12])+\"\\n            \")]),_c('pl-cascade',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar node = ref.node;\nvar index = ref.index;\nreturn [_vm._v(\"\\n                    \"+_vm._s(index+1)+\"、\"+_vm._s(node.data.name)+\"\\n                \")]}}]),model:{value:(_vm.val[12]),callback:function ($$v) {_vm.$set(_vm.val, 12, $$v)},expression:\"val[12]\"}})],1),_c('demo-row',{attrs:{\"title\":\"禁用以及只读\"}},[_c('demo-line',{attrs:{\"title\":\"禁用\"}},[_c('pl-checkbox',{attrs:{\"label\":\"禁用\"},model:{value:(_vm.flag.disabled),callback:function ($$v) {_vm.$set(_vm.flag, \"disabled\", $$v)},expression:\"flag.disabled\"}}),_c('pl-cascade',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\",\"disabled\":_vm.flag.disabled},model:{value:(_vm.val[13]),callback:function ($$v) {_vm.$set(_vm.val, 13, $$v)},expression:\"val[13]\"}})],1),_c('demo-line',{attrs:{\"title\":\"只读\"}},[_c('pl-checkbox',{attrs:{\"label\":\"只读\"},model:{value:(_vm.flag.readonly),callback:function ($$v) {_vm.$set(_vm.flag, \"readonly\", $$v)},expression:\"flag.readonly\"}}),_c('pl-cascade',{attrs:{\"data\":_vm.treeData,\"labelField\":\"name\",\"keyField\":\"id\",\"childrenField\":\"subs\",\"readonly\":_vm.flag.readonly},model:{value:(_vm.val[13]),callback:function ($$v) {_vm.$set(_vm.val, 13, $$v)},expression:\"val[13]\"}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"demo-cascade\">\r\n        <demo-row title=\"cascade-panel\">\r\n            <demo-row title=\"cascade-panel\">\r\n                <demo-line>\r\n                    {{val[0]}}\r\n                </demo-line>\r\n                <pl-cascade-panel\r\n                        v-model=\"val[0]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                />\r\n            </demo-row>\r\n            <demo-row title=\"cascade-panel: 懒加载\">\r\n                <demo-line>\r\n                    {{val[1]}}\r\n                </demo-line>\r\n                <pl-cascade-panel\r\n                        v-model=\"val[1]\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                        lazy\r\n                        :isLeaf=\"lazyDemo.isLeaf\"\r\n                        :getChildren=\"lazyDemo.getChildren\"\r\n                />\r\n            </demo-row>\r\n            <demo-row title=\"cascade-panel: 懒加载，有默认值\">\r\n                <demo-line>\r\n                    {{val[11]}}\r\n                </demo-line>\r\n                <pl-cascade-panel\r\n                        v-model=\"val[11]\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                        lazy\r\n                        :isLeaf=\"lazyDemo.isLeaf\"\r\n                        :getChildren=\"lazyDemo.getChildren\"\r\n                />\r\n            </demo-row>\r\n            <demo-row title=\"cascade-panel: init value\">\r\n                <demo-line>\r\n                    {{val[2]}}\r\n                </demo-line>\r\n                <pl-cascade-panel\r\n                        v-model=\"val[2]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                />\r\n            </demo-row>\r\n            <demo-row title=\"cascade-panel:hover 触发器\">\r\n                <demo-line>\r\n                    {{val[3]}}\r\n                </demo-line>\r\n                <pl-cascade-panel\r\n                        trigger=\"hover\"\r\n                        v-model=\"val[3]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                />\r\n            </demo-row>\r\n            <demo-row title=\"cascade-panel:禁用部分选项\">\r\n                <demo-line>\r\n                    禁用掉叶子节点，并且节点名称中含有[2]的节点\r\n                </demo-line>\r\n                <demo-line>\r\n                    {{val[4]}}\r\n                </demo-line>\r\n                <pl-cascade-panel\r\n                        :nodeDisabled=\"nodeDisabled\"\r\n                        v-model=\"val[4]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                />\r\n            </demo-row>\r\n            <demo-row title=\"cascade-panel:自定义内容-作用域插槽\">\r\n                <demo-line>\r\n                    {{val[5]}}\r\n                </demo-line>\r\n                <pl-cascade-panel\r\n                        v-model=\"val[5]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                >\r\n                    <template slot-scope=\"{node,index}\">\r\n                        <cascade-item :node=\"node\" :index=\"index\"/>\r\n                    </template>\r\n                </pl-cascade-panel>\r\n            </demo-row>\r\n            <demo-row title=\"cascade-panel:自定义内容-渲染函数\">\r\n                <demo-line>\r\n                    {{val[5]}}\r\n                </demo-line>\r\n                <pl-cascade-panel\r\n                        v-model=\"val[5]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                        :renderContent=\"renderContent\"\r\n                >\r\n                </pl-cascade-panel>\r\n            </demo-row>\r\n            <demo-row title=\"cascade-panel:点击分支的时候也能触发change\">\r\n                <demo-line>\r\n                    {{val[6]}}\r\n                </demo-line>\r\n                <pl-cascade-panel\r\n                        v-model=\"val[6]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                        selectBranch\r\n                />\r\n            </demo-row>\r\n            <demo-row title=\"cascade-panel:筛选文本以及自定义筛选函数\">\r\n                <demo-line>\r\n                    <pl-input v-model=\"filterText\"/>\r\n                </demo-line>\r\n                <demo-line>\r\n                    {{val[6]}}\r\n                </demo-line>\r\n                <pl-cascade-panel\r\n                        v-model=\"val[6]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                        :filterText=\"filterText\"\r\n                        :filterMethod=\"filterMethod\"\r\n                />\r\n            </demo-row>\r\n        </demo-row>\r\n        <demo-row title=\"cascade-service\">\r\n            <demo-row title=\"cascade service：基本用法\">\r\n                <pl-button label=\"open cascade\" ref=\"test0\" @click=\"test0.toggle()\"/>\r\n            </demo-row>\r\n            <demo-row title=\"cascade service：懒加载\">\r\n                <pl-button label=\"open cascade\" ref=\"lazyTest\" @click=\"lazyTest.toggle()\"/>\r\n            </demo-row>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"pl-cascade\">\r\n            <demo-row title=\"基本用法\">\r\n                <demo-line>\r\n                    {{val[7]}}\r\n                </demo-line>\r\n                <pl-cascade\r\n                        v-model=\"val[7]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                        @focus=\"$plain.log('focus')\" @blur=\"$plain.log('blur')\"\r\n                />\r\n\r\n            </demo-row>\r\n            <demo-row title=\"禁用选项\">\r\n                <demo-line>\r\n                    {{val[7]}}\r\n                </demo-line>\r\n                <pl-cascade\r\n                        v-model=\"val[7]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                        :nodeDisabled=\"nodeDisabled\"\r\n                />\r\n            </demo-row>\r\n            <demo-row title=\"只显示最后一级文本\">\r\n                <demo-line>\r\n                    {{val[8]}}\r\n                </demo-line>\r\n                <pl-cascade\r\n                        v-model=\"val[8]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                        showLast\r\n                />\r\n            </demo-row>\r\n            <demo-row title=\"可以选择分支（可以选择非叶子节点）\">\r\n                <demo-line>\r\n                    {{val[9]}}\r\n                </demo-line>\r\n                <pl-cascade\r\n                        v-model=\"val[9]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                        selectBranch\r\n                />\r\n            </demo-row>\r\n            <demo-row title=\"动态加载\">\r\n                <demo-line>\r\n                    {{formData}}\r\n                </demo-line>\r\n                <pl-cascade\r\n                        :value=\"[formData.level1Key,formData.level2Key,formData.level3Key]\"\r\n                        @change=\"onCascadeChange\"\r\n                        :showFormat=\"showFormat\"\r\n\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                        lazy\r\n                        :getChildren=\"lazyDemo.getChildren\"\r\n                        :isLeaf=\"lazyDemo.isLeaf\"\r\n                />\r\n                <pl-cascade\r\n                        :value=\"[formData.level1Key,formData.level2Key,formData.level3Key]\"\r\n                        @change=\"onCascadeChange\"\r\n                        :showFormat=\"showFormat\"\r\n\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                        lazy\r\n                        :getChildren=\"lazyDemo.getChildren\"\r\n                        :isLeaf=\"lazyDemo.isLeaf\"\r\n                />\r\n            </demo-row>\r\n\r\n            <demo-row title=\"输入筛选\">\r\n                <demo-line>\r\n                    {{val[10]}}\r\n                </demo-line>\r\n                <pl-cascade\r\n                        v-model=\"val[10]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                        filterable\r\n                />\r\n            </demo-row>\r\n            <demo-row title=\"自定义节点内容\">\r\n                <demo-line>\r\n                    {{val[12]}}\r\n                </demo-line>\r\n                <pl-cascade\r\n                        v-model=\"val[12]\"\r\n                        :data=\"treeData\"\r\n                        labelField=\"name\"\r\n                        keyField=\"id\"\r\n                        childrenField=\"subs\"\r\n                >\r\n                    <template slot-scope=\"{node,index}\">\r\n                        {{index+1}}、{{node.data.name}}\r\n                    </template>\r\n                </pl-cascade>\r\n            </demo-row>\r\n\r\n            <demo-row title=\"禁用以及只读\">\r\n                <demo-line title=\"禁用\">\r\n                    <pl-checkbox v-model=\"flag.disabled\" label=\"禁用\"/>\r\n                    <pl-cascade :data=\"treeData\" labelField=\"name\" keyField=\"id\" childrenField=\"subs\" :disabled=\"flag.disabled\" v-model=\"val[13]\"/>\r\n                </demo-line>\r\n                <demo-line title=\"只读\">\r\n                    <pl-checkbox v-model=\"flag.readonly\" label=\"只读\"/>\r\n                    <pl-cascade :data=\"treeData\" labelField=\"name\" keyField=\"id\" childrenField=\"subs\" :readonly=\"flag.readonly\" v-model=\"val[13]\"/>\r\n                </demo-line>\r\n            </demo-row>\r\n\r\n        </demo-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    const CascadeItem = {\r\n        props: {\r\n            node: {},\r\n            index: {},\r\n        },\r\n        render(h) {\r\n            return (\r\n                <div>\r\n                    {this.index}, {this.node.label}\r\n                </div>\r\n            )\r\n        },\r\n        mounted() {\r\n            console.log('mounted', this.node.label)\r\n        },\r\n    }\r\n\r\n    export default {\r\n        name: \"cascade\",\r\n        props: {},\r\n        components: {CascadeItem},\r\n        data() {\r\n            const treeData = [\r\n                {\r\n                    id: '1',\r\n                    name: '一级 1',\r\n                    subs: [\r\n                        ...([1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(index => ({\r\n                            id: '1-' + index,\r\n                            name: '二级 1-' + index,\r\n                            subs: [{\r\n                                id: `1-${index}-1`,\r\n                                name: `三级 1-${index}-1`\r\n                            }]\r\n                        })))\r\n                    ]\r\n                }, {\r\n                    id: '2',\r\n                    name: '一级 2',\r\n                    subs: [\r\n                        ...([1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(index => ({\r\n                            id: '2-' + index,\r\n                            name: '二级 2-' + index,\r\n                            subs: [{\r\n                                id: `2-${index}-1`,\r\n                                name: `三级 2-${index}-1`\r\n                            }]\r\n                        })))\r\n                    ]\r\n                }, {\r\n                    id: '3',\r\n                    name: '一级 3',\r\n                    subs: [{\r\n                        id: '3-1',\r\n                        name: '二级 3-1',\r\n                        subs: [{\r\n                            id: '3-1-1',\r\n                            name: '三级 3-1-1'\r\n                        }, {\r\n                            id: '3-1-2',\r\n                            name: '三级 3-1-2'\r\n                        }]\r\n                    }, {\r\n                        id: '3-2',\r\n                        name: '二级 3-2',\r\n                        subs: [{\r\n                            id: '3-2-1',\r\n                            name: '三级 3-2-1'\r\n                        }]\r\n                    }]\r\n                }]\r\n\r\n            const lazyDemo = {\r\n                isLeaf: (node) => {\r\n                    return node.level >= 3\r\n                },\r\n                getChildren: (node, resolve) => {\r\n                    switch (node.level) {\r\n                        case 0:\r\n                            // 加载一级数据\r\n                            this.lazyDemo.getCitiesByParentId(null).then(resolve)\r\n                            break\r\n                        case 1:\r\n                            // 加载二级数据\r\n                            this.lazyDemo.getCitiesByParentId(node.data.id).then(resolve)\r\n                            break\r\n                        case 2:\r\n                            // 加载三级数据\r\n                            this.lazyDemo.getCitiesByParentId(node.data.id).then(resolve)\r\n                            break\r\n                        default:\r\n                            return null\r\n                    }\r\n                },\r\n                getCitiesByParentId(parentId) {\r\n                    return new Promise((resolve) => {\r\n                        // 这个是模拟在数据库表中的数据\r\n                        const data = [\r\n                            {id: '1', name: '广东省', parentId: null, subs: []},\r\n                            {id: '2', name: '佛山市', parentId: '1', subs: []},\r\n                            {id: '3', name: '深圳市', parentId: '1', subs: []},\r\n                            {id: '4', name: '禅城区', parentId: '2', subs: []},\r\n                            {id: '5', name: '南山区', parentId: '3', subs: []},\r\n\r\n                            {id: '6', name: '湖南省', parentId: null, subs: []},\r\n                            {id: '7', name: '长沙市', parentId: '6', subs: []},\r\n                            {id: '8', name: '邵阳市', parentId: '6', subs: []},\r\n                            {id: '9', name: '天心区', parentId: '7', subs: []},\r\n\r\n                            {id: '11', name: '陕西省', parentId: null, subs: []},\r\n                        ]\r\n\r\n                        // 模拟请求，请求时间大概在1s-2s之间\r\n                        setTimeout(() => {\r\n                            resolve(data.filter(item => item.parentId === parentId))\r\n                        }, Math.random() * 500 + 500)\r\n                    })\r\n                },\r\n            }\r\n\r\n            const newData = (name, option) => {\r\n                let result = {\r\n                    service: null,\r\n                    option: {\r\n                        props: {\r\n                            data: () => this.treeData,\r\n                            labelField: 'name',\r\n                            keyField: 'id',\r\n                            childrenField: 'subs',\r\n\r\n                            value: null,\r\n                            ...option,\r\n                        },\r\n                        popperProps: {\r\n                            reference: () => this.$refs[name],\r\n                        },\r\n                        listener: {\r\n                            change: (val) => {\r\n                                this.$message(val.toString())\r\n                                result.option.props.value = val\r\n                            },\r\n                        },\r\n                    },\r\n                    toggle: async () => {\r\n                        if (!result.service) {\r\n                            result.service = await this.$plain.$cascade(result.option)\r\n                        }\r\n                        result.service.toggle()\r\n                    },\r\n                }\r\n                return result\r\n            }\r\n\r\n            // 无初始值\r\n            const test0 = newData('test0', {\r\n                renderContent: (...args) => this.renderContent(...args)\r\n            })\r\n\r\n            const lazyTest = newData('lazyTest', {\r\n                lazy: true,\r\n                isLeaf: lazyDemo.isLeaf,\r\n                getChildren: lazyDemo.getChildren,\r\n                data: null,\r\n            })\r\n\r\n            return {\r\n                treeData,\r\n                lazyDemo,\r\n                val: {\r\n                    11: [\"6\", \"7\", \"9\"],\r\n                    2: [\"2\", \"2-1\", \"2-1-1\"],\r\n                },\r\n\r\n                test0,\r\n                lazyTest,\r\n\r\n                filterText: null,\r\n                // filterMethod: null,\r\n                filterMethod: (nodes, text) => {\r\n                    return nodes.some(node => node.key.indexOf(text) > -1)\r\n                },\r\n\r\n                formData: {\r\n                    level1Name: '广东省',\r\n                    level1Key: '1',\r\n                    level2Name: '深圳市',\r\n                    level2Key: '3',\r\n                    level3Name: '南山区',\r\n                    level3Key: '5',\r\n                },\r\n\r\n                flag: {\r\n                    disabled: true,\r\n                    readonly: true\r\n                },\r\n            }\r\n        },\r\n        methods: {\r\n            isLeaf(node) {\r\n                return node.level > 3\r\n            },\r\n            nodeDisabled(node) {\r\n                return node.isLeaf && node.label.indexOf('2') > 0\r\n            },\r\n            renderContent(h, {node, index}) {\r\n                return (\r\n                    <div>\r\n                        <CascadeItem node={node} index={index}/>\r\n                    </div>\r\n                )\r\n            },\r\n\r\n            onCascadeChange(value, nodes) {\r\n                console.log('onCascadeChange',value, nodes)\r\n                if (!value) {\r\n                    this.formData.level1Name = null\r\n                    this.formData.level1Key = null\r\n                    this.formData.level2Name = null\r\n                    this.formData.level2Key = null\r\n                    this.formData.level3Name = null\r\n                    this.formData.level3Key = null\r\n                } else {\r\n                    this.formData.level1Name = nodes[0].data.name\r\n                    this.formData.level1Key = value[0]\r\n                    this.formData.level2Name = nodes[1].data.name\r\n                    this.formData.level2Key = value[1]\r\n                    this.formData.level3Name = nodes[2].data.name\r\n                    this.formData.level3Key = value[2]\r\n                }\r\n            },\r\n            showFormat() {\r\n                return [this.formData.level1Name, this.formData.level2Name, this.formData.level3Name].filter(item => !!item).join(' / ')\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cascade.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cascade.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cascade.vue?vue&type=template&id=15cb1174&\"\nimport script from \"./cascade.vue?vue&type=script&lang=js&\"\nexport * from \"./cascade.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
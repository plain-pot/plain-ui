{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./src-doc/page/normal/tree.vue?6ecc","webpack:///./node_modules/core-js/modules/es6.string.ends-with.js","webpack:///./src-doc/page/normal/tree.vue?8b26","webpack:///src-doc/page/normal/tree.vue","webpack:///./src-doc/page/normal/tree.vue?84f0","webpack:///./src-doc/page/normal/tree.vue","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/core-js/modules/es6.string.starts-with.js"],"names":["MATCH","module","exports","KEY","re","e","f","$export","toLength","context","ENDS_WITH","$endsWith","P","F","endsWith","searchString","that","this","endPosition","arguments","length","undefined","len","end","Math","min","search","String","call","slice","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","on","$event","$refs","tree1","methods","expandAll","collapseAll","expand","expandSome","showCurrent","expandAndSelect","ref","treeData","onNodeClick","lazyDemo","isLeaf","getChildren","checkTree","checkAll","uncheckAll","check","$message","getCheckedData","map","item","name","join","time","unCheckStrictTree","checkableTree","isCheckable","scopedSlotDemo","getCurrent","data","staticStyle","scopedSlots","_u","key","fn","_v","_s","addItem","deleteItem","renderDemo","renderContent","nodeIcon","model","value","callback","$$v","filterText","expression","filterNodeMethod","currentTree","currentKey","treeNode","dragTree","style","color","id","charAt","dragAndCheckTree","$plain","log","allowDrag","allowDrop","staticRenderFns","console","Array","from","$el","querySelectorAll","component","isRegExp","defined","NAME","TypeError","STARTS_WITH","$startsWith","startsWith","index"],"mappings":"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","file":"js/chunk-5dcd40df.13349d0c.js","sourcesContent":["var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree.vue?vue&type=style&index=0&lang=scss&\"","// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar ENDS_WITH = 'endsWith';\nvar $endsWith = ''[ENDS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(ENDS_WITH), 'String', {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = context(this, searchString, ENDS_WITH);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);\n    var search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"demo-tree\"},[_c('demo-row',{attrs:{\"title\":\"基本用法\"}},[_c('demo-line',[_c('pl-button-group',[_c('pl-button',{attrs:{\"label\":\"全部展开\"},on:{\"click\":function($event){return _vm.$refs.tree1.methods.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部收起\"},on:{\"click\":function($event){return _vm.$refs.tree1.methods.collapseAll()}}}),_c('pl-button',{attrs:{\"label\":\"展开特定节点\"},on:{\"click\":function($event){return _vm.$refs.tree1.methods.expand('2-2-2')}}}),_c('pl-button',{attrs:{\"label\":\"展开部分节点\"},on:{\"click\":_vm.expandSome}}),_c('pl-button',{attrs:{\"label\":\"当前选中节点\"},on:{\"click\":_vm.showCurrent}}),_c('pl-button',{attrs:{\"label\":\"展开并且设置当前选中节点\"},on:{\"click\":_vm.expandAndSelect}})],1)],1),_c('pl-tree',{ref:\"tree1\",attrs:{\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\"},on:{\"node-click\":_vm.onNodeClick}})],1),_c('demo-row',{attrs:{\"title\":\"初始化的时候就渲染所有隐藏的节点，而不是第一次展开的时候才渲染\"}},[_c('pl-tree',{attrs:{\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"renderAfterExpand\":false}})],1),_c('demo-row',{attrs:{\"title\":\"懒加载子节点\"}},[_c('pl-tree',{ref:\"lazyTree\",attrs:{\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"lazy\":\"\",\"isLeaf\":_vm.lazyDemo.isLeaf,\"getChildren\":_vm.lazyDemo.getChildren}})],1),_c('demo-row',{attrs:{\"title\":\"多选\"}},[_c('demo-line',[_c('pl-button-group',[_c('pl-button',{attrs:{\"label\":\"展开所有节点\"},on:{\"click\":function($event){return _vm.$refs.checkTree.methods.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部选中\"},on:{\"click\":function($event){return _vm.$refs.checkTree.methods.checkAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部取消\"},on:{\"click\":function($event){return _vm.$refs.checkTree.methods.uncheckAll()}}}),_c('pl-button',{attrs:{\"label\":\"选中部分数据\"},on:{\"click\":function($event){return _vm.$refs.checkTree.methods.check(['1-1-1','2-2-2'])}}}),_c('pl-button',{attrs:{\"label\":\"获取选中的数据\"},on:{\"click\":function($event){_vm.$message(_vm.$refs.checkTree.methods.getCheckedData().map(function (item){ return item.name; }).join(','),{time:null})}}})],1)],1),_c('pl-tree',{ref:\"checkTree\",attrs:{\"showCheckbox\":\"\",\"checkOnClickNode\":\"\",\"expandOnClickNode\":false,\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\"}})],1),_c('demo-row',{attrs:{\"title\":\"多选：父子互不关联\"}},[_c('demo-line',[_c('pl-button-group',[_c('pl-button',{attrs:{\"label\":\"展开所有节点\"},on:{\"click\":function($event){return _vm.$refs.unCheckStrictTree.methods.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部选中\"},on:{\"click\":function($event){return _vm.$refs.unCheckStrictTree.methods.checkAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部取消\"},on:{\"click\":function($event){return _vm.$refs.unCheckStrictTree.methods.uncheckAll()}}}),_c('pl-button',{attrs:{\"label\":\"选中部分数据\"},on:{\"click\":function($event){return _vm.$refs.unCheckStrictTree.methods.check(['1-1-1','2-2-2'])}}}),_c('pl-button',{attrs:{\"label\":\"获取选中的数据\"},on:{\"click\":function($event){_vm.$message(_vm.$refs.unCheckStrictTree.methods.getCheckedData().map(function (item){ return item.name; }).join(','),{time:null})}}})],1)],1),_c('pl-tree',{ref:\"unCheckStrictTree\",attrs:{\"showCheckbox\":\"\",\"checkOnClickNode\":\"\",\"expandOnClickNode\":false,\"checkStrictly\":\"\",\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\"}})],1),_c('demo-row',{attrs:{\"title\":\"多选：禁用部分选项，只能勾选1结尾的节点\"}},[_c('demo-line',[_c('pl-button-group',[_c('pl-button',{attrs:{\"label\":\"展开所有节点\"},on:{\"click\":function($event){return _vm.$refs.checkableTree.methods.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部选中\"},on:{\"click\":function($event){return _vm.$refs.checkableTree.methods.checkAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部取消\"},on:{\"click\":function($event){return _vm.$refs.checkableTree.methods.uncheckAll()}}}),_c('pl-button',{attrs:{\"label\":\"选中部分数据\"},on:{\"click\":function($event){return _vm.$refs.checkableTree.methods.check(['1-1-1','2-2-2'])}}}),_c('pl-button',{attrs:{\"label\":\"获取选中的数据\"},on:{\"click\":function($event){_vm.$message(_vm.$refs.checkableTree.methods.getCheckedData().map(function (item){ return item.name; }).join(','),{time:null})}}})],1)],1),_c('pl-tree',{ref:\"checkableTree\",attrs:{\"showCheckbox\":\"\",\"checkOnClickNode\":\"\",\"expandOnClickNode\":false,\"data\":_vm.treeData,\"checkStrictly\":\"\",\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"isCheckable\":_vm.isCheckable}})],1),_c('demo-row',{attrs:{\"title\":\"自定义内容：作用域插槽\"}},[_c('demo-line',[_c('pl-button-group',[_c('pl-button',{attrs:{\"label\":\"全部展开\"},on:{\"click\":function($event){return _vm.$refs.scopedSlotDemo.methods.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部收起\"},on:{\"click\":function($event){return _vm.$refs.scopedSlotDemo.methods.collapseAll()}}}),_c('pl-button',{attrs:{\"label\":\"当前选中节点\"},on:{\"click\":function($event){_vm.$message(!!_vm.$refs.scopedSlotDemo.methods.getCurrent() ? _vm.$refs.scopedSlotDemo.methods.getCurrent().data.name : '未选中任何节点！')}}}),_c('pl-button',{attrs:{\"label\":\"获取选中的数据\"},on:{\"click\":function($event){_vm.$message(_vm.$refs.scopedSlotDemo.methods.getCheckedData().map(function (item){ return item.name; }).join(','),{time:null})}}})],1)],1),_c('pl-tree',{ref:\"scopedSlotDemo\",staticStyle:{\"width\":\"500px\"},attrs:{\"data\":_vm.scopedSlotDemo.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"showCheckbox\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(data){return [_c('div',{staticStyle:{\"width\":\"100%\",\"display\":\"flex\",\"justify-content\":\"space-between\"}},[_c('span',[_vm._v(_vm._s(data.data.name))]),_c('pl-button-group',{attrs:{\"mode\":\"text\"}},[_c('pl-button',{attrs:{\"label\":\"Add\",\"size\":\"mini\"},on:{\"click\":function (e){ return _vm.scopedSlotDemo.addItem(e,data); }}}),_c('pl-button',{attrs:{\"label\":\"Del\",\"size\":\"mini\",\"status\":\"error\"},on:{\"click\":function (e){ return _vm.scopedSlotDemo.deleteItem(e,data); }}})],1)],1)]}}])})],1),_c('demo-row',{attrs:{\"title\":\"自定义内容：渲染函数\"}},[_c('demo-line',[_c('pl-button-group',[_c('pl-button',{attrs:{\"label\":\"全部展开\"},on:{\"click\":function($event){return _vm.$refs.renderDemo.methods.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"全部收起\"},on:{\"click\":function($event){return _vm.$refs.renderDemo.methods.collapseAll()}}}),_c('pl-button',{attrs:{\"label\":\"当前选中节点\"},on:{\"click\":function($event){_vm.$message(!!_vm.$refs.renderDemo.methods.getCurrent() ? _vm.$refs.renderDemo.methods.getCurrent().data.name : '未选中任何节点！')}}}),_c('pl-button',{attrs:{\"label\":\"获取选中的数据\"},on:{\"click\":function($event){_vm.$message(_vm.$refs.renderDemo.methods.getCheckedData().map(function (item){ return item.name; }).join(','),{time:null})}}})],1)],1),_c('pl-tree',{ref:\"renderDemo\",staticStyle:{\"width\":\"500px\"},attrs:{\"data\":_vm.renderDemo.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"showCheckbox\":\"\",\"renderContent\":_vm.renderDemo.renderContent}})],1),_c('demo-row',{attrs:{\"title\":\"节点图标\"}},[_c('pl-tree',{attrs:{\"defaultExpandAll\":\"\",\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"nodeIcon\":_vm.nodeIcon}})],1),_c('demo-row',{attrs:{\"title\":\"手风琴模式，展开节点的时候关闭兄弟节点\"}},[_c('pl-tree',{attrs:{\"according\":\"\",\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\"}})],1),_c('demo-row',{attrs:{\"title\":\"自定义过滤函数\"}},[_c('demo-line',[_c('pl-input',{attrs:{\"suffixIcon\":\"el-icon-search\",\"clearIcon\":\"\"},model:{value:(_vm.filterText),callback:function ($$v) {_vm.filterText=$$v},expression:\"filterText\"}})],1),_c('pl-tree',{attrs:{\"defaultExpandAll\":\"\",\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"filterNodeMethod\":_vm.filterNodeMethod}})],1),_c('demo-row',{attrs:{\"title\":\"绑定currentKey\"}},[_c('demo-line',[_c('pl-button',{attrs:{\"label\":\"全部展开\"},on:{\"click\":function($event){return _vm.$refs.currentTree.methods.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"设置currentKey\"},on:{\"click\":function($event){_vm.currentKey = '3-1-1'}}}),_vm._v(\"\\n            \"+_vm._s(_vm.currentKey)+\"\\n        \")],1),_c('pl-tree',{ref:\"currentTree\",attrs:{\"currentKey\":_vm.currentKey,\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\"},on:{\"current-change\":function (treeNode){ return _vm.currentKey = treeNode.key; }}})],1),_c('demo-row',{attrs:{\"title\":\"展开图标\"}},[_c('pl-tree',{attrs:{\"data\":_vm.treeData,\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"expandIcon\":\"el-icon-caret-right\"}})],1),_c('demo-row',{attrs:{\"title\":\"拖拽节点\"}},[_c('demo-line',[_c('pl-button',{attrs:{\"label\":\"全部展开\"},on:{\"click\":function($event){return _vm.$refs.dragTree.methods.expandAll()}}})],1),_c('pl-tree',{ref:\"dragTree\",attrs:{\"data\":_vm.treeData,\"defaultExpandAll\":\"\",\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"draggable\":\"\",\"showCheckbox\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar data = ref.data;\nreturn [_c('span',{style:({color:data.id.charAt(0) === '1'?'#12b4a5':(data.id.charAt(0) === '2'?'#00CC00':'#F38585')})},[_vm._v(_vm._s(data.name))])]}}])})],1),_c('demo-row',{attrs:{\"title\":\"拖拽节点+可勾选\"}},[_c('demo-line',[_c('pl-button',{attrs:{\"label\":\"全部展开\"},on:{\"click\":function($event){return _vm.$refs.dragAndCheckTree.methods.expandAll()}}}),_c('pl-button',{attrs:{\"label\":\"打印数据\"},on:{\"click\":function($event){return _vm.$plain.log(_vm.treeData)}}}),_c('pl-button',{attrs:{\"label\":\"获取选中的数据\"},on:{\"click\":function($event){_vm.$message(_vm.$refs.dragAndCheckTree.methods.getCheckedData().map(function (item){ return item.name; }).join(','),{time:null})}}})],1),_c('ol',[_c('li',[_vm._v(\"父子关联模式下，拖拽节点可能会引起 选中/取消选中 事件\")]),_c('li',[_vm._v(\"拖拽节点会刷新节点的状态，每个节点会先判断子节点是否全都选中，全部选中并且自身未选中的情况下，会选中自身\")]),_c('li',[_vm._v(\"自身选中，但是存在子节点未选中的情况下，会取消选中自身\")]),_c('li',[_vm._v(\"非父子关联模式下，拖拽节点不会导致节点选中状态变化\")])]),_c('pl-tree',{ref:\"dragAndCheckTree\",attrs:{\"data\":_vm.treeData,\"defaultExpandAll\":\"\",\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"showCheckbox\":\"\",\"draggable\":\"\"}})],1),_c('demo-row',{attrs:{\"title\":\"拖拽节点：可拖拽allowDrag以及可放置allowDrop\"}},[_c('ol',[_c('li',[_vm._v(\"2-2开头的id不能被拖拽\")]),_c('li',[_vm._v(\"3开头的id不能放置任何节点\")])]),_c('pl-tree',{ref:\"dragTree\",attrs:{\"data\":_vm.treeData,\"defaultExpandAll\":\"\",\"keyField\":\"id\",\"labelField\":\"name\",\"childrenField\":\"subs\",\"draggable\":\"\",\"allowDrag\":_vm.allowDrag,\"allowDrop\":_vm.allowDrop}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"demo-tree\">\r\n        <demo-row title=\"基本用法\">\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"全部展开\" @click=\"$refs.tree1.methods.expandAll()\"/>\r\n                    <pl-button label=\"全部收起\" @click=\"$refs.tree1.methods.collapseAll()\"/>\r\n                    <pl-button label=\"展开特定节点\" @click=\"$refs.tree1.methods.expand('2-2-2')\"/>\r\n                    <pl-button label=\"展开部分节点\" @click=\"expandSome\"/>\r\n                    <pl-button label=\"当前选中节点\" @click=\"showCurrent\"/>\r\n                    <pl-button label=\"展开并且设置当前选中节点\" @click=\"expandAndSelect\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n            <pl-tree ref=\"tree1\"\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     @node-click=\"onNodeClick\"/>\r\n        </demo-row>\r\n        <demo-row title=\"初始化的时候就渲染所有隐藏的节点，而不是第一次展开的时候才渲染\">\r\n            <pl-tree :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     :renderAfterExpand=\"false\"/>\r\n        </demo-row>\r\n        <demo-row title=\"懒加载子节点\">\r\n            <pl-tree ref=\"lazyTree\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     lazy\r\n                     :isLeaf=\"lazyDemo.isLeaf\"\r\n                     :getChildren=\"lazyDemo.getChildren\"\r\n            />\r\n        </demo-row>\r\n        <demo-row title=\"多选\">\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"展开所有节点\" @click=\"$refs.checkTree.methods.expandAll()\"/>\r\n                    <pl-button label=\"全部选中\" @click=\"$refs.checkTree.methods.checkAll()\"/>\r\n                    <pl-button label=\"全部取消\" @click=\"$refs.checkTree.methods.uncheckAll()\"/>\r\n                    <pl-button label=\"选中部分数据\" @click=\"$refs.checkTree.methods.check(['1-1-1','2-2-2'])\"/>\r\n                    <pl-button label=\"获取选中的数据\" @click=\"$message($refs.checkTree.methods.getCheckedData().map(item=>item.name).join(','),{time:null})\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n            <pl-tree ref=\"checkTree\"\r\n                     showCheckbox\r\n                     checkOnClickNode\r\n                     :expandOnClickNode=\"false\"\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"多选：父子互不关联\">\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"展开所有节点\" @click=\"$refs.unCheckStrictTree.methods.expandAll()\"/>\r\n                    <pl-button label=\"全部选中\" @click=\"$refs.unCheckStrictTree.methods.checkAll()\"/>\r\n                    <pl-button label=\"全部取消\" @click=\"$refs.unCheckStrictTree.methods.uncheckAll()\"/>\r\n                    <pl-button label=\"选中部分数据\" @click=\"$refs.unCheckStrictTree.methods.check(['1-1-1','2-2-2'])\"/>\r\n                    <pl-button label=\"获取选中的数据\" @click=\"$message($refs.unCheckStrictTree.methods.getCheckedData().map(item=>item.name).join(','),{time:null})\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n            <pl-tree ref=\"unCheckStrictTree\"\r\n                     showCheckbox\r\n                     checkOnClickNode\r\n                     :expandOnClickNode=\"false\"\r\n                     checkStrictly\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"多选：禁用部分选项，只能勾选1结尾的节点\">\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"展开所有节点\" @click=\"$refs.checkableTree.methods.expandAll()\"/>\r\n                    <pl-button label=\"全部选中\" @click=\"$refs.checkableTree.methods.checkAll()\"/>\r\n                    <pl-button label=\"全部取消\" @click=\"$refs.checkableTree.methods.uncheckAll()\"/>\r\n                    <pl-button label=\"选中部分数据\" @click=\"$refs.checkableTree.methods.check(['1-1-1','2-2-2'])\"/>\r\n                    <pl-button label=\"获取选中的数据\" @click=\"$message($refs.checkableTree.methods.getCheckedData().map(item=>item.name).join(','),{time:null})\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n            <pl-tree ref=\"checkableTree\"\r\n                     showCheckbox\r\n                     checkOnClickNode\r\n                     :expandOnClickNode=\"false\"\r\n                     :data=\"treeData\"\r\n                     checkStrictly\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     :isCheckable=\"isCheckable\"/>\r\n        </demo-row>\r\n\r\n\r\n        <demo-row title=\"自定义内容：作用域插槽\">\r\n\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"全部展开\" @click=\"$refs.scopedSlotDemo.methods.expandAll()\"/>\r\n                    <pl-button label=\"全部收起\" @click=\"$refs.scopedSlotDemo.methods.collapseAll()\"/>\r\n                    <pl-button label=\"当前选中节点\" @click=\"$message(!!$refs.scopedSlotDemo.methods.getCurrent() ? $refs.scopedSlotDemo.methods.getCurrent().data.name : '未选中任何节点！')\"/>\r\n                    <pl-button label=\"获取选中的数据\" @click=\"$message($refs.scopedSlotDemo.methods.getCheckedData().map(item=>item.name).join(','),{time:null})\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n\r\n            <pl-tree ref=\"scopedSlotDemo\"\r\n                     :data=\"scopedSlotDemo.treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     style=\"width: 500px\"\r\n                     showCheckbox>\r\n                <template slot-scope=\"data\">\r\n                    <div style=\"width:100%;display: flex;justify-content: space-between\">\r\n                        <span>{{data.data.name}}</span>\r\n                        <pl-button-group mode=\"text\">\r\n                            <pl-button label=\"Add\" @click=\"e=>scopedSlotDemo.addItem(e,data)\" size=\"mini\"/>\r\n                            <pl-button label=\"Del\" @click=\"e=>scopedSlotDemo.deleteItem(e,data)\" size=\"mini\" status=\"error\"/>\r\n                        </pl-button-group>\r\n                    </div>\r\n                </template>\r\n            </pl-tree>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"自定义内容：渲染函数\">\r\n\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"全部展开\" @click=\"$refs.renderDemo.methods.expandAll()\"/>\r\n                    <pl-button label=\"全部收起\" @click=\"$refs.renderDemo.methods.collapseAll()\"/>\r\n                    <pl-button label=\"当前选中节点\" @click=\"$message(!!$refs.renderDemo.methods.getCurrent() ? $refs.renderDemo.methods.getCurrent().data.name : '未选中任何节点！')\"/>\r\n                    <pl-button label=\"获取选中的数据\" @click=\"$message($refs.renderDemo.methods.getCheckedData().map(item=>item.name).join(','),{time:null})\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n\r\n            <pl-tree ref=\"renderDemo\"\r\n                     :data=\"renderDemo.treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     style=\"width: 500px\"\r\n                     showCheckbox\r\n                     :renderContent=\"renderDemo.renderContent\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"节点图标\">\r\n            <pl-tree defaultExpandAll\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     :nodeIcon=\"nodeIcon\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"手风琴模式，展开节点的时候关闭兄弟节点\">\r\n            <pl-tree according\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"自定义过滤函数\">\r\n            <demo-line>\r\n                <pl-input v-model=\"filterText\" suffixIcon=\"el-icon-search\" clearIcon/>\r\n            </demo-line>\r\n            <pl-tree defaultExpandAll\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     :filterNodeMethod=\"filterNodeMethod\"/>\r\n        </demo-row>\r\n        <demo-row title=\"绑定currentKey\">\r\n            <demo-line>\r\n                <pl-button label=\"全部展开\" @click=\"$refs.currentTree.methods.expandAll()\"/>\r\n                <pl-button label=\"设置currentKey\" @click=\"currentKey = '3-1-1'\"/>\r\n                {{currentKey}}\r\n            </demo-line>\r\n            <pl-tree ref=\"currentTree\"\r\n                     :currentKey=\"currentKey\"\r\n                     :data=\"treeData\"\r\n                     keyField=\"id\"\r\n                     labelField=\"name\"\r\n                     childrenField=\"subs\"\r\n                     @current-change=\"treeNode=>currentKey = treeNode.key\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"展开图标\">\r\n            <pl-tree\r\n                    :data=\"treeData\"\r\n                    keyField=\"id\"\r\n                    labelField=\"name\"\r\n                    childrenField=\"subs\"\r\n                    expandIcon=\"el-icon-caret-right\"/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"拖拽节点\">\r\n            <demo-line>\r\n                <pl-button label=\"全部展开\" @click=\"$refs.dragTree.methods.expandAll()\"/>\r\n            </demo-line>\r\n            <pl-tree\r\n                    ref=\"dragTree\"\r\n                    :data=\"treeData\"\r\n                    defaultExpandAll\r\n                    keyField=\"id\"\r\n                    labelField=\"name\"\r\n                    childrenField=\"subs\"\r\n                    draggable\r\n                    showCheckbox\r\n            >\r\n                <template slot-scope=\"{data}\">\r\n                    <span :style=\"{color:data.id.charAt(0) === '1'?'#12b4a5':(data.id.charAt(0) === '2'?'#00CC00':'#F38585')}\">{{data.name}}</span>\r\n                </template>\r\n            </pl-tree>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"拖拽节点+可勾选\">\r\n            <demo-line>\r\n                <pl-button label=\"全部展开\" @click=\"$refs.dragAndCheckTree.methods.expandAll()\"/>\r\n                <pl-button label=\"打印数据\" @click=\"$plain.log(treeData)\"/>\r\n                <pl-button label=\"获取选中的数据\" @click=\"$message($refs.dragAndCheckTree.methods.getCheckedData().map(item=>item.name).join(','),{time:null})\"/>\r\n            </demo-line>\r\n            <ol>\r\n                <li>父子关联模式下，拖拽节点可能会引起 选中/取消选中 事件</li>\r\n                <li>拖拽节点会刷新节点的状态，每个节点会先判断子节点是否全都选中，全部选中并且自身未选中的情况下，会选中自身</li>\r\n                <li>自身选中，但是存在子节点未选中的情况下，会取消选中自身</li>\r\n                <li>非父子关联模式下，拖拽节点不会导致节点选中状态变化</li>\r\n            </ol>\r\n            <pl-tree\r\n                    ref=\"dragAndCheckTree\"\r\n                    :data=\"treeData\"\r\n                    defaultExpandAll\r\n                    keyField=\"id\"\r\n                    labelField=\"name\"\r\n                    childrenField=\"subs\"\r\n                    showCheckbox\r\n                    draggable/>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"拖拽节点：可拖拽allowDrag以及可放置allowDrop\">\r\n            <ol>\r\n                <li>2-2开头的id不能被拖拽</li>\r\n                <li>3开头的id不能放置任何节点</li>\r\n            </ol>\r\n            <pl-tree\r\n                    ref=\"dragTree\"\r\n                    :data=\"treeData\"\r\n                    defaultExpandAll\r\n                    keyField=\"id\"\r\n                    labelField=\"name\"\r\n                    childrenField=\"subs\"\r\n                    draggable\r\n                    :allowDrag=\"allowDrag\"\r\n                    :allowDrop=\"allowDrop\"\r\n            />\r\n        </demo-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"tree\",\r\n        props: {},\r\n        data() {\r\n            const treeData = [\r\n                {\r\n                    id: '1',\r\n                    name: '一级 1',\r\n                    subs: [{\r\n                        id: '1-1',\r\n                        name: '二级 1-1',\r\n                        subs: [{\r\n                            id: '1-1-1',\r\n                            name: '三级 1-1-1'\r\n                        }]\r\n                    }]\r\n                }, {\r\n                    id: '2',\r\n                    name: '一级 2',\r\n                    subs: [{\r\n                        id: '2-1',\r\n                        name: '二级 2-1',\r\n                        subs: [{\r\n                            id: '2-1-1',\r\n                            name: '三级 2-1-1'\r\n                        }]\r\n                    }, {\r\n                        id: '2-2',\r\n                        name: '二级 2-2',\r\n                        subs: [{\r\n                            id: '2-2-1',\r\n                            name: '三级 2-2-1'\r\n                        }, {\r\n                            id: '2-2-2',\r\n                            name: '三级 2-2-2'\r\n                        }]\r\n                    }]\r\n                }, {\r\n                    id: '3',\r\n                    name: '一级 3',\r\n                    subs: [{\r\n                        id: '3-1',\r\n                        name: '二级 3-1',\r\n                        subs: [{\r\n                            id: '3-1-1',\r\n                            name: '三级 3-1-1'\r\n                        }, {\r\n                            id: '3-1-2',\r\n                            name: '三级 3-1-2'\r\n                        }]\r\n                    }, {\r\n                        id: '3-2',\r\n                        name: '二级 3-2',\r\n                        subs: [{\r\n                            id: '3-2-1',\r\n                            name: '三级 3-2-1'\r\n                        }]\r\n                    }]\r\n                }]\r\n            return {\r\n                filterText: null,\r\n                treeData,\r\n                lazyDemo: {\r\n                    isLeaf: (treeNode) => {\r\n                        return treeNode.level >= 3\r\n                    },\r\n                    getChildren: (treeNode, resolve) => {\r\n                        switch (treeNode.level) {\r\n                            case 0:\r\n                                // 加载一级数据\r\n                                this.lazyDemo.getCitiesByParentId(null).then(resolve)\r\n                                break\r\n                            case 1:\r\n                                // 加载二级数据\r\n                                this.lazyDemo.getCitiesByParentId(treeNode.data.id).then(resolve)\r\n                                break\r\n                            case 2:\r\n                                // 加载三级数据\r\n                                this.lazyDemo.getCitiesByParentId(treeNode.data.id).then(resolve)\r\n                                break\r\n                            default:\r\n                                return null\r\n                        }\r\n                    },\r\n                    getCitiesByParentId(parentId) {\r\n                        return new Promise((resolve) => {\r\n                            // 这个是模拟在数据库表中的数据\r\n                            const data = [\r\n                                {id: '1', name: '广东省', parentId: null, subs: []},\r\n                                {id: '2', name: '佛山市', parentId: '1', subs: []},\r\n                                {id: '3', name: '深圳市', parentId: '1', subs: []},\r\n                                {id: '4', name: '禅城区', parentId: '2', subs: []},\r\n                                {id: '5', name: '南山区', parentId: '3', subs: []},\r\n\r\n                                {id: '6', name: '湖南省', parentId: null, subs: []},\r\n                                {id: '7', name: '长沙市', parentId: '6', subs: []},\r\n                                {id: '8', name: '邵阳市', parentId: '6', subs: []},\r\n                                {id: '9', name: '天心区', parentId: '7', subs: []},\r\n\r\n                                {id: '11', name: '陕西省', parentId: null, subs: []},\r\n                            ]\r\n\r\n                            // 模拟请求，请求时间大概在1s-2s之间\r\n                            setTimeout(() => {\r\n                                resolve(data.filter(item => item.parentId === parentId))\r\n                            }, Math.random() * 1000 + 1000)\r\n                        })\r\n                    },\r\n                },\r\n                scopedSlotDemo: {\r\n                    treeData: this.$plain.utils.deepcopy(treeData),\r\n                    renderContent: (h, data) => {\r\n                        return (\r\n                            <div style=\"width:100%;display: flex;justify-content: space-between\">\r\n                                <span>{data.data.name}}</span>\r\n                                <pl-button-group mode=\"text\">\r\n                                    <pl-button label=\"Add\" onClick={e => {\r\n                                        e.stopPropagation();\r\n                                        this.scopedSlotDemo.addItem(data)\r\n                                    }} size=\"mini\"/>\r\n                                    <pl-button label=\"Del\" onClick={e => {\r\n                                        e.stopPropagation();\r\n                                        this.scopedSlotDemo.deleteItem(data)\r\n                                    }} size=\"mini\" status=\"error\"/>\r\n                                </pl-button-group>\r\n                            </div>\r\n                        )\r\n                    },\r\n                    addItem: (e, treeNode) => {\r\n                        e.stopPropagation()\r\n                        const {data} = treeNode\r\n                        const subs = data.subs || []\r\n\r\n                        const name = `n-${data.id}-${subs.length + 1}`\r\n                        const id = name + Date.now().toString()\r\n                        subs.push({\r\n                            id,\r\n                            name: `new item ${name}`,\r\n                        })\r\n                        this.$set(data, 'subs', subs)\r\n                        this.$nextTick(() => this.$refs.scopedSlotDemo.methods.expand(id))\r\n                    },\r\n                    deleteItem: (e, treeNode) => {\r\n                        e.stopPropagation()\r\n                        let {data, parent} = treeNode\r\n                        const subs = !!parent ? parent.data.subs : this.treeData\r\n                        subs.splice(subs.indexOf(data), 1)\r\n                    },\r\n                },\r\n                renderDemo: {\r\n                    treeData: this.$plain.utils.deepcopy(treeData),\r\n                    renderContent: (h, data) => {\r\n                        return (\r\n                            <div style=\"width:100%;display: flex;justify-content: space-between\">\r\n                                <span>{data.data.name}</span>\r\n                                <pl-button-group mode=\"text\">\r\n                                    <pl-button label=\"Add\" onClick={e => this.renderDemo.addItem(e, data)} size=\"mini\"/>\r\n                                    <pl-button label=\"Del\" onClick={e => this.renderDemo.deleteItem(e, data)} size=\"mini\" status=\"error\"/>\r\n                                </pl-button-group>\r\n                            </div>\r\n                        )\r\n                    },\r\n                    addItem: (e, treeNode) => {\r\n                        e.stopPropagation()\r\n                        const {data} = treeNode\r\n                        const subs = data.subs || []\r\n\r\n                        const name = `n-${data.id}-${subs.length + 1}`\r\n                        const id = name + Date.now().toString()\r\n                        subs.push({\r\n                            id,\r\n                            name: `new item ${name}`,\r\n                        })\r\n                        this.$set(data, 'subs', subs)\r\n                        this.$nextTick(() => this.$refs.renderDemo.methods.expand(id))\r\n                    },\r\n                    deleteItem: (e, treeNode) => {\r\n                        e.stopPropagation()\r\n                        let {data, parent} = treeNode\r\n                        const subs = !!parent ? parent.data.subs : this.treeData\r\n                        subs.splice(subs.indexOf(data), 1)\r\n                    },\r\n                },\r\n                currentKey: null,\r\n            }\r\n        },\r\n        methods: {\r\n            onNodeClick(treeNode) {\r\n                console.log(treeNode.data.name)\r\n            },\r\n            showCurrent() {\r\n                let current = this.$refs.tree1.methods.getCurrent()\r\n                this.$message(!!current ? current.data.name : '未选中任何节点！')\r\n            },\r\n            expandAndSelect() {\r\n                this.$refs.tree1.methods.expand('2-2-2')\r\n                this.$refs.tree1.methods.setCurrent('2-2-2')\r\n            },\r\n            async expandSome() {\r\n                // console.log('start')\r\n                await this.$refs.tree1.methods.expand(['2-2-2', '3-1-2'])\r\n                // console.log('end')\r\n                console.log(Array.from(this.$el.querySelectorAll('.pl-tree-node')).length)\r\n            },\r\n            filterNodeMethod(treeNode) {\r\n                const data = treeNode.data\r\n                if (!this.filterText) return true;\r\n                return data.name.indexOf(this.filterText) !== -1;\r\n            },\r\n            isCheckable(treeNode) {\r\n                return treeNode.data.name.endsWith('1')\r\n            },\r\n            nodeIcon(treeNode) {\r\n                return treeNode.isLeaf ? 'el-icon-document' : 'el-icon-folder-opened'\r\n            },\r\n            allowDrag(dragTreeNode, event) {\r\n                // 2-2开头的id不能被拖拽\r\n                return !dragTreeNode.data.id.startsWith('2-2')\r\n            },\r\n            allowDrop(dragTreeNode, dropTreeNode, dragType, event) {\r\n                // 3-开头的id不能放置任何节点\r\n                return !dropTreeNode.data.id.startsWith('3')\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .demo-tree {\r\n        .demo-row-content {\r\n            /*width: 300px;*/\r\n        }\r\n    }\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tree.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./tree.vue?vue&type=template&id=08d1f4bc&\"\nimport script from \"./tree.vue?vue&type=script&lang=js&\"\nexport * from \"./tree.vue?vue&type=script&lang=js&\"\nimport style0 from \"./tree.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n"],"sourceRoot":""}
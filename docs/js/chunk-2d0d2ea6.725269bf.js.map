{"version":3,"sources":["webpack://CustomApplicationmain-application/./story/pages/table/span/table-colspan.vue","webpack://CustomApplicationmain-application/./story/pages/table/span/table-colspan.vue?09ad"],"names":["class","title","data","item","index","key","spanMethod","border","field","name","first","second","third","fourth","spanMap","collapseFields","forEach","map","prevField","fieldIndex","push","console","log","JSON","parse","stringify","node","plc","props","rowspan","colspan","render"],"mappings":"8LACSA,MAAM,iB,qKAAX,eAeM,MAfN,EAeM,CAdF,eAA8B,GAAnBC,MAAM,cACjB,eAIK,Y,mBAHD,eAEK,2BAFsB,EAAAC,MAAI,SAAnBC,EAAKC,G,wBAAjB,eAEK,MAF6BC,IAAKD,GAAK,eACtCD,GAAI,M,QAGd,eAOW,GAPAD,KAAM,EAAAA,KAAOI,WAAY,EAAAA,WAAYC,OAAA,I,yBAC5C,iBAAY,CAAZ,eAAY,GACZ,eAA+B,GAA1BN,MAAM,MAAMO,MAAM,SACvB,eAAmC,GAA9BP,MAAM,SAASO,MAAM,UAC1B,eAAoC,GAA/BP,MAAM,SAASO,MAAM,WAC1B,eAAmC,GAA9BP,MAAM,SAASO,MAAM,UAC1B,eAAoC,GAA/BP,MAAM,SAASO,MAAM,e,8CAMnB,GACXC,KAAM,gBACNP,KAFW,WAEJ,WAEGA,EAAO,CACT,CAACO,KAAM,OAAQC,MAAO,KAAMC,OAAQ,KAAMC,MAAO,KAAMC,OAAQ,MAC/D,CAACJ,KAAM,OAAQC,MAAO,KAAMC,OAAQ,KAAMC,MAAO,KAAMC,OAAQ,MAC/D,CAACJ,KAAM,OAAQC,MAAO,KAAMC,OAAQ,KAAMC,MAAO,KAAMC,OAAQ,MAC/D,CAACJ,KAAM,OAAQC,MAAO,KAAMC,OAAQ,KAAMC,MAAO,KAAMC,OAAQ,MAC/D,CAACJ,KAAM,OAAQC,MAAO,KAAMC,OAAQ,KAAMC,MAAO,KAAMC,OAAQ,OAG7DC,EAAU,GACVC,EAAiB,CAAC,QAAS,SAAU,QAAS,UA0BpD,OAxBAb,EAAKc,SAAQ,SAAAb,GACT,IAAMc,EAAM,GACRC,EAAY,KAChBH,EAAeC,SAAQ,SAACR,EAAOW,GAC3B,GAAmB,IAAfA,EAGA,OAFAD,EAAYV,OACZS,EAAIT,GAAS,GAIbL,EAAKe,KAAef,EAAKK,IACzBS,EAAIT,GAAS,EACbS,EAAIC,OAEJD,EAAIT,GAAS,EACbU,EAAYV,MAIpBM,EAAQM,KAAKH,MAGjBI,QAAQC,IAAIC,KAAKC,MAAMD,KAAKE,UAAUX,KAE/B,CACHZ,OACAY,UACAR,WAAY,YAAiB,IAAfoB,EAAe,EAAfA,KAAMC,EAAS,EAATA,IAETnB,EAASmB,EAAIC,MAAbpB,MAEP,MAAc,SAAVA,EACO,CACHqB,QAAS,EACTC,QAAS,GAGN,CACHD,QAAS,EACTC,QAAS,EAAKhB,QAAQY,EAAKtB,OAAOI,QCvE9D,EAAOuB,OAASA,EAED","file":"js/chunk-2d0d2ea6.725269bf.js","sourcesContent":["<template>\r\n    <div class=\"table-colspan\">\r\n        <demo-line title=\"字段值相同则合并列\"/>\r\n        <ul>\r\n            <li v-for=\"(item,index) in data\" :key=\"index\">\r\n                {{item}}\r\n            </li>\r\n        </ul>\r\n        <pl-table :data=\"data\" :spanMethod=\"spanMethod\" border>\r\n            <plc-index/>\r\n            <plc title=\"产品线\" field=\"name\"/>\r\n            <plc title=\"第一季度盈亏\" field=\"first\"/>\r\n            <plc title=\"第二季度盈亏\" field=\"second\"/>\r\n            <plc title=\"第三季度盈亏\" field=\"third\"/>\r\n            <plc title=\"第四季度盈亏\" field=\"fourth\"/>\r\n        </pl-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"table-colspan\",\r\n        data() {\r\n\r\n            const data = [\r\n                {name: '产品线A', first: '盈利', second: '盈利', third: '亏损', fourth: '亏损',},\r\n                {name: '产品线B', first: '盈利', second: '亏损', third: '亏损', fourth: '亏损',},\r\n                {name: '产品线C', first: '盈利', second: '盈利', third: '盈利', fourth: '亏损',},\r\n                {name: '产品线D', first: '亏损', second: '亏损', third: '亏损', fourth: '亏损',},\r\n                {name: '产品线E', first: '盈利', second: '盈利', third: '盈利', fourth: '盈利',},\r\n            ]\r\n\r\n            const spanMap = []\r\n            const collapseFields = ['first', 'second', 'third', 'fourth']\r\n\r\n            data.forEach(item => {\r\n                const map = {}\r\n                let prevField = null\r\n                collapseFields.forEach((field, fieldIndex) => {\r\n                    if (fieldIndex === 0) {\r\n                        prevField = field\r\n                        map[field] = 1\r\n                        return\r\n                    }\r\n\r\n                    if (item[prevField] === item[field]) {\r\n                        map[field] = 0\r\n                        map[prevField]++\r\n                    } else {\r\n                        map[field] = 1\r\n                        prevField = field\r\n                    }\r\n\r\n                })\r\n                spanMap.push(map)\r\n            })\r\n\r\n            console.log(JSON.parse(JSON.stringify(spanMap)))\r\n\r\n            return {\r\n                data,\r\n                spanMap,\r\n                spanMethod: ({node, plc}) => {\r\n\r\n                    const {field} = plc.props\r\n\r\n                    if (field === 'name') {\r\n                        return {\r\n                            rowspan: 1,\r\n                            colspan: 1,\r\n                        }\r\n                    } else {\r\n                        return {\r\n                            rowspan: 1,\r\n                            colspan: this.spanMap[node.index][field]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>","import { render } from \"./table-colspan.vue?vue&type=template&id=1b886c80\"\nimport script from \"./table-colspan.vue?vue&type=script&lang=js\"\nexport * from \"./table-colspan.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}
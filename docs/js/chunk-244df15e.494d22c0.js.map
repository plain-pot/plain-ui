{"version":3,"sources":["webpack:///./story/pages/table/span/table-span.vue","webpack:///./story/pages/table/span/table-span.vue?f310","webpack:///./story/pages/table/span/table-rowspan.vue","webpack:///./story/pages/table/span/table-rowspan.vue?0a57","webpack:///./story/pages/table/span/table-colspan.vue","webpack:///./story/pages/table/span/table-colspan.vue?09ad"],"names":["class","title","name","components","TableColspan","TableRowspan","render","data","item","index","key","spanMethod","border","field","first","second","third","prevIndex","spanMap","collapseField","initMap","reduce","ret","forEach","map","push","methods","node","plc","colspan","rowspan","this","props","fourth","collapseFields","prevField","fieldIndex","console","log","JSON","parse","stringify"],"mappings":"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","file":"js/chunk-244df15e.494d22c0.js","sourcesContent":["<template>\r\n    <div class=\"table-span\">\r\n        <demo-row title=\"合并行\">\r\n            <table-rowspan/>\r\n        </demo-row>\r\n        <demo-row title=\"合并列\">\r\n            <table-colspan/>\r\n        </demo-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import TableRowspan from \"./table-rowspan\";\r\n    import TableColspan from \"./table-colspan\";\r\n    export default {\r\n        name: \"table-span.vue\",\r\n        components: {TableColspan, TableRowspan},\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>","import { render } from \"./table-span.vue?vue&type=template&id=0be8c56d\"\nimport script from \"./table-span.vue?vue&type=script&lang=js\"\nexport * from \"./table-span.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"table-rowspan\">\r\n        <demo-line title=\"字段值相同则合并行\"/>\r\n        <ul>\r\n            <li v-for=\"(item,index) in data\" :key=\"index\">\r\n                {{item}}\r\n            </li>\r\n        </ul>\r\n        <pl-table :data=\"data\" :spanMethod=\"spanMethod\" border>\r\n            <plc-index/>\r\n            <plc title=\"一级标题\" field=\"first\"/>\r\n            <plc title=\"二级标题\" field=\"second\"/>\r\n            <plc title=\"三级标题\" field=\"third\"/>\r\n        </pl-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    export default {\r\n        name: \"table-rowspan\",\r\n        data() {\r\n\r\n            const data = [\r\n                {first: '1', second: '1-1', third: '1-1-1'},\r\n                {first: '1', second: '1-1', third: '1-1-2'},\r\n                {first: '1', second: '1-1', third: '1-1-3'},\r\n                {first: '1', second: '1-2', third: '1-2-1'},\r\n                {first: '1', second: '1-3', third: '1-3-1'},\r\n                {first: '2', second: '2-1', third: '2-1-1'},\r\n                {first: '2', second: '2-1', third: '2-1-2'},\r\n                {first: '2', second: '2-2', third: '2-2-1'},\r\n            ]\r\n\r\n            const prevIndex = {\r\n                first: 0,\r\n                second: 0,\r\n                third: 0,\r\n            }\r\n\r\n            const spanMap = []\r\n            const collapseField = ['first', 'second']\r\n            const initMap = collapseField.reduce((ret, item) => {\r\n                ret[item] = 1\r\n                return ret\r\n            }, {})\r\n\r\n            data.forEach((item, index) => {\r\n\r\n                const map = {...initMap}\r\n\r\n                if (index === 0) {\r\n                    spanMap.push(map)\r\n                    return\r\n                }\r\n\r\n                collapseField.forEach(key => {\r\n                    if (item[key] === data[prevIndex[key]][key]) {\r\n                        spanMap[prevIndex[key]][key]++\r\n                        map[key] = 0\r\n                    } else {\r\n                        prevIndex[key] = index\r\n                    }\r\n                })\r\n\r\n                spanMap.push(map)\r\n            })\r\n\r\n            // console.log(JSON.parse(JSON.stringify(spanMap)))\r\n\r\n            return {\r\n                data,\r\n                spanMap,\r\n            }\r\n        },\r\n        methods: {\r\n            spanMethod({node, plc}) {\r\n                return {\r\n                    colspan: 1,\r\n                    rowspan: this.spanMap[node.index][plc.props.field] != null ? this.spanMap[node.index][plc.props.field] : 1,\r\n                }\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>","import { render } from \"./table-rowspan.vue?vue&type=template&id=53a483a3\"\nimport script from \"./table-rowspan.vue?vue&type=script&lang=js\"\nexport * from \"./table-rowspan.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"table-colspan\">\r\n        <demo-line title=\"字段值相同则合并列\"/>\r\n        <ul>\r\n            <li v-for=\"(item,index) in data\" :key=\"index\">\r\n                {{item}}\r\n            </li>\r\n        </ul>\r\n        <pl-table :data=\"data\" :spanMethod=\"spanMethod\" border>\r\n            <plc-index/>\r\n            <plc title=\"产品线\" field=\"name\"/>\r\n            <plc title=\"第一季度盈亏\" field=\"first\"/>\r\n            <plc title=\"第二季度盈亏\" field=\"second\"/>\r\n            <plc title=\"第三季度盈亏\" field=\"third\"/>\r\n            <plc title=\"第四季度盈亏\" field=\"fourth\"/>\r\n        </pl-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"table-colspan\",\r\n        data() {\r\n\r\n            const data = [\r\n                {name: '产品线A', first: '盈利', second: '盈利', third: '亏损', fourth: '亏损',},\r\n                {name: '产品线B', first: '盈利', second: '亏损', third: '亏损', fourth: '亏损',},\r\n                {name: '产品线C', first: '盈利', second: '盈利', third: '盈利', fourth: '亏损',},\r\n                {name: '产品线D', first: '亏损', second: '亏损', third: '亏损', fourth: '亏损',},\r\n                {name: '产品线E', first: '盈利', second: '盈利', third: '盈利', fourth: '盈利',},\r\n            ]\r\n\r\n            const spanMap = []\r\n            const collapseFields = ['first', 'second', 'third', 'fourth']\r\n\r\n            data.forEach(item => {\r\n                const map = {}\r\n                let prevField = null\r\n                collapseFields.forEach((field, fieldIndex) => {\r\n                    if (fieldIndex === 0) {\r\n                        prevField = field\r\n                        map[field] = 1\r\n                        return\r\n                    }\r\n\r\n                    if (item[prevField] === item[field]) {\r\n                        map[field] = 0\r\n                        map[prevField]++\r\n                    } else {\r\n                        map[field] = 1\r\n                        prevField = field\r\n                    }\r\n\r\n                })\r\n                spanMap.push(map)\r\n            })\r\n\r\n            console.log(JSON.parse(JSON.stringify(spanMap)))\r\n\r\n            return {\r\n                data,\r\n                spanMap,\r\n                spanMethod: ({node, plc}) => {\r\n\r\n                    const {field} = plc.props\r\n\r\n                    if (field === 'name') {\r\n                        return {\r\n                            rowspan: 1,\r\n                            colspan: 1,\r\n                        }\r\n                    } else {\r\n                        return {\r\n                            rowspan: 1,\r\n                            colspan: this.spanMap[node.index][field]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>","import { render } from \"./table-colspan.vue?vue&type=template&id=1b886c80\"\nimport script from \"./table-colspan.vue?vue&type=script&lang=js\"\nexport * from \"./table-colspan.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}
{"version":3,"sources":["webpack://CustomApplicationmain-application/./story/pages/table/tree/tree-table-virtual.vue","webpack://CustomApplicationmain-application/./story/pages/table/tree/tree-table-virtual.vue?d7a8","webpack://CustomApplicationmain-application/./story/pages/table/tree/tree-table-virtual-draggable.vue","webpack://CustomApplicationmain-application/./story/pages/table/tree/tree-table-virtual-draggable.vue?68d8","webpack://CustomApplicationmain-application/./story/pages/table/tree/table-tree.vue","webpack://CustomApplicationmain-application/./story/pages/table/tree/table-tree.vue?88f9","webpack://CustomApplicationmain-application/./story/pages/table/tree/table-tree.vue?a6da"],"names":["class","label","$refs","tree","expandAll","collapseAll","$message","getCheckedData","map","data","name","join","tableData","keyField","childrenField","virtual","showCheckbox","ref","content","row","title","field","mounted","default","render","rowDraggable","tree1","expand","expandSome","expandAndSelect","tree2","lazyDemo","lazy","isLeaf","getChildren","strictCheck","getSelected","node","strictTree","checkStrictly","disabledCheck","disabledCheckTree","isCheckable","customIsCheckable","according","size","suffixIcon","filterBindingText","filterText","icon","filterNodeMethod","customFilterNodeMethod","allowRowDraggable","allow","allowRowDroppable","rowDroppable","components","TreeTableVirtualDraggable","TreeTableVirtual","log","console","level","resolve","getCitiesByParentId","then","id","parentId","Promise","subs","setTimeout","filter","item","Math","random","startNode","moveNode","dropType","methods","keys","this","table1","setCurrent","indexOf"],"mappings":"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","file":"js/chunk-1f27d7cf.c87bd0ab.js","sourcesContent":["<template>\r\n    <div class=\"tree-table-virtual\">\r\n\r\n        <demo-line>\r\n            <pl-button-group>\r\n                <pl-button label=\"全部展开\" @click=\"$refs.tree.expandAll()\"/>\r\n                <pl-button label=\"全部收起\" @click=\"$refs.tree.collapseAll()\"/>\r\n                <pl-button label=\"获取选中数据\" @click=\"$message($refs.tree.getCheckedData().map(({data})=>data.name).join(','))\"/>\r\n            </pl-button-group>\r\n        </demo-line>\r\n        <pl-table :data=\"tableData\"\r\n                  keyField=\"code\"\r\n                  childrenField=\"children\"\r\n                  virtual\r\n                  showCheckbox>\r\n            <plc-index/>\r\n            <plc-tree ref=\"tree\">\r\n                <template v-slot:content=\"{row}\">\r\n                    {{row.name}}\r\n                </template>\r\n            </plc-tree>\r\n            <plc title=\"名称\" field=\"id\"/>\r\n            <plc title=\"名称\" field=\"name\"/>\r\n        </pl-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"tree-table-virtual\",\r\n        data() {\r\n            return {\r\n                tableData: [],\r\n            }\r\n        },\r\n        async mounted() {\r\n            const data = (await import('../../data/address')).default\r\n            this.tableData = [...data]\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>","import { render } from \"./tree-table-virtual.vue?vue&type=template&id=01bdb59a\"\nimport script from \"./tree-table-virtual.vue?vue&type=script&lang=js\"\nexport * from \"./tree-table-virtual.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"tree-table-virtual-draggable\">\r\n\r\n        <demo-line>\r\n            <pl-button-group>\r\n                <pl-button label=\"全部展开\" @click=\"$refs.tree.expandAll()\"/>\r\n                <pl-button label=\"全部收起\" @click=\"$refs.tree.collapseAll()\"/>\r\n                <pl-button label=\"获取选中数据\" @click=\"$message($refs.tree.getCheckedData().map(({data})=>data.name).join(','))\"/>\r\n            </pl-button-group>\r\n        </demo-line>\r\n        <pl-table :data=\"tableData\"\r\n                  keyField=\"code\"\r\n                  childrenField=\"children\"\r\n                  virtual\r\n                  showCheckbox>\r\n            <plc-index/>\r\n            <plc-tree ref=\"tree\" rowDraggable>\r\n                <template v-slot:content=\"{row}\">\r\n                    {{row.name}}\r\n                </template>\r\n            </plc-tree>\r\n            <plc title=\"名称\" field=\"id\"/>\r\n            <plc title=\"名称\" field=\"name\"/>\r\n        </pl-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"tree-table-virtual-draggable\",\r\n        data() {\r\n            return {\r\n                tableData: [],\r\n            }\r\n        },\r\n        async mounted() {\r\n            const data = (await import('../../data/address')).default\r\n            this.tableData = [...data]\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>","import { render } from \"./tree-table-virtual-draggable.vue?vue&type=template&id=31a9a6ee\"\nimport script from \"./tree-table-virtual-draggable.vue?vue&type=script&lang=js\"\nexport * from \"./tree-table-virtual-draggable.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"table-tree\">\r\n        <demo-row title=\"基本用法\">\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"全部展开\" @click=\"$refs.tree1.expandAll()\"/>\r\n                    <pl-button label=\"全部收起\" @click=\"$refs.tree1.collapseAll()\"/>\r\n                    <pl-button label=\"展开特定节点\" @click=\"$refs.tree1.expand('2-2-2')\"/>\r\n                    <pl-button label=\"展开部分节点\" @click=\"expandSome\"/>\r\n                    <!--                    <pl-button label=\"当前选中节点\" @click=\"showCurrent\"/>-->\r\n                    <pl-button label=\"展开并且设置当前选中节点\" @click=\"expandAndSelect\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n            <pl-table :data=\"data\"\r\n                      keyField=\"id\"\r\n                      childrenField=\"subs\"\r\n                      ref=\"table1\">\r\n                <plc-index/>\r\n                <plc-tree ref=\"tree1\" title=\"标题\">\r\n                    <template v-slot:content=\"{row}\">\r\n                        {{row.name}}\r\n                    </template>\r\n                </plc-tree>\r\n                <plc title=\"编号\" field=\"id\"/>\r\n                <plc title=\"名称\" field=\"name\"/>\r\n            </pl-table>\r\n        </demo-row>\r\n        <demo-row title=\"可选树形表格\">\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button label=\"全部展开\" @click=\"$refs.tree2.expandAll()\"/>\r\n                    <pl-button label=\"全部收起\" @click=\"$refs.tree2.collapseAll()\"/>\r\n                    <pl-button label=\"获取选中数据\" @click=\"$message($refs.tree2.getCheckedData().map(({data})=>data.name).join(','))\"/>\r\n                </pl-button-group>\r\n            </demo-line>\r\n            <pl-table :data=\"data\"\r\n                      keyField=\"id\"\r\n                      childrenField=\"subs\"\r\n                      showCheckbox>\r\n                <plc-index/>\r\n                <plc-tree ref=\"tree2\">\r\n                    <template v-slot:content=\"{row}\">\r\n                        {{row.name}}\r\n                    </template>\r\n                </plc-tree>\r\n                <plc title=\"编号\" field=\"id\"/>\r\n                <plc title=\"名称\" field=\"name\"/>\r\n            </pl-table>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"懒加载子节点\">\r\n            <pl-table v-model=\"lazyDemo.data\"\r\n                      keyField=\"id\"\r\n                      childrenField=\"subs\"\r\n                      lazy\r\n                      :isLeaf=\"lazyDemo.isLeaf\"\r\n                      :getChildren=\"lazyDemo.getChildren\">\r\n                <plc-index/>\r\n                <plc-tree ref=\"draggableTree\">\r\n                    <template v-slot:content=\"{row}\">\r\n                        {{row.name}}\r\n                    </template>\r\n                </plc-tree>\r\n                <plc title=\"编号\" field=\"id\"/>\r\n                <plc title=\"名称\" field=\"name\"/>\r\n            </pl-table>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"多选，父子互不关联\">\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button @click=\"$message($refs.strictCheck.getSelected().map(node=>node.data.name).join(','))\">获取多选列的选中数据</pl-button>\r\n                    <pl-button @click=\"$message($refs.strictTree.getCheckedData().map(({data})=>data.name).join(','))\">获取树列的选中数据</pl-button>\r\n                </pl-button-group>\r\n            </demo-line>\r\n            <pl-table :data=\"data\"\r\n\r\n                      keyField=\"id\"\r\n                      childrenField=\"subs\"\r\n                      checkStrictly\r\n                      showCheckbox>\r\n                <plc-index/>\r\n                <plc-check ref=\"strictCheck\"/>\r\n                <plc-tree ref=\"strictTree\">\r\n                    <template v-slot:content=\"{row}\">\r\n                        {{row.name}}\r\n                    </template>\r\n                </plc-tree>\r\n                <plc title=\"编号\" field=\"id\"/>\r\n                <plc title=\"名称\" field=\"name\"/>\r\n            </pl-table>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"多选，禁用部分选项：名称带字符【2】的记录不能选中\">\r\n            <demo-line>\r\n                <pl-button-group>\r\n                    <pl-button @click=\"$message($refs.disabledCheck.getSelected().map(node=>node.data.name).join(','))\">获取多选列的选中数据</pl-button>\r\n                    <pl-button @click=\"$message($refs.disabledCheckTree.getCheckedData().map(({data})=>data.name).join(','))\">获取树列的选中数据</pl-button>\r\n                </pl-button-group>\r\n            </demo-line>\r\n            <pl-table :data=\"data\"\r\n\r\n                      keyField=\"id\"\r\n                      childrenField=\"subs\"\r\n                      :isCheckable=\"customIsCheckable\"\r\n                      showCheckbox>\r\n                <plc-index/>\r\n                <plc-check ref=\"disabledCheck\" :isCheckable=\"customIsCheckable\"/>\r\n                <plc-tree ref=\"disabledCheckTree\">\r\n                    <template v-slot:content=\"{row}\">\r\n                        {{row.name}}\r\n                    </template>\r\n                </plc-tree>\r\n                <plc title=\"编号\" field=\"id\"/>\r\n                <plc title=\"名称\" field=\"name\"/>\r\n            </pl-table>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"手风琴模式，打开节点的时候关闭兄弟节点\">\r\n            <pl-table :data=\"data\"\r\n                      keyField=\"id\"\r\n                      childrenField=\"subs\"\r\n                      according>\r\n                <plc-index/>\r\n                <plc-tree>\r\n                    <template v-slot:content=\"{row}\">\r\n                        {{row.name}}\r\n                    </template>\r\n                </plc-tree>\r\n                <plc title=\"编号\" field=\"id\"/>\r\n                <plc title=\"名称\" field=\"name\"/>\r\n            </pl-table>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"自定义过滤函数，实现数据筛选的功能\">\r\n            <demo-line>\r\n                <pl-alert size=\"mini\">\r\n                    当子节点显示的时候，父节点也会显示，不管父节点是否能通过自定义过滤函数的校验\r\n                </pl-alert>\r\n            </demo-line>\r\n            <demo-line>\r\n                <pl-input suffixIcon=\"el-icon-search\" v-model=\"filterBindingText\" @enter=\"()=>filterText = filterBindingText\"/>\r\n                <pl-icon icon=\"el-icon-info\" v-tooltip=\"'回车确定筛选'\"/>\r\n            </demo-line>\r\n            <pl-table :data=\"data\"\r\n                      keyField=\"id\"\r\n                      childrenField=\"subs\"\r\n                      :filterNodeMethod=\"customFilterNodeMethod\">\r\n                <plc-index/>\r\n                <plc-tree>\r\n                    <template v-slot:content=\"{row}\">\r\n                        {{row.name}}\r\n                    </template>\r\n                </plc-tree>\r\n                <plc title=\"编号\" field=\"id\"/>\r\n                <plc title=\"名称\" field=\"name\"/>\r\n            </pl-table>\r\n        </demo-row>\r\n\r\n        <demo-row title=\"树形虚拟表格\">\r\n            <tree-table-virtual/>\r\n        </demo-row>\r\n        <demo-row title=\"可拖拽树形表格\">\r\n            <pl-table :data=\"data\"\r\n                      keyField=\"id\"\r\n                      childrenField=\"subs\">\r\n                <plc-index/>\r\n                <plc-tree :rowDraggable=\"true\">\r\n                    <template v-slot:content=\"{row}\">\r\n                        {{row.name}}\r\n                    </template>\r\n                </plc-tree>\r\n                <plc title=\"编号\" field=\"id\"/>\r\n                <plc title=\"名称\" field=\"name\"/>\r\n            </pl-table>\r\n        </demo-row>\r\n        <demo-row title=\"可拖拽的树形虚拟表格\">\r\n            <tree-table-virtual-draggable/>\r\n        </demo-row>\r\n        <demo-row title=\"可拖拽，可放置控制\">\r\n            <demo-line>\r\n                <pl-alert>\r\n                    默认情况下，一个节点不能放置在他的子节点中\r\n                </pl-alert>\r\n            </demo-line>\r\n            <demo-line>\r\n                这里示例，第一层节点不能被拖拽，不能放置在第一层节点前后，只能放置在其子节点中（相当于控制第一层节点数量不变）\r\n            </demo-line>\r\n            <pl-table :data=\"data\"\r\n                      keyField=\"id\"\r\n                      childrenField=\"subs\">\r\n                <plc-index/>\r\n                <plc-tree :rowDraggable=\"true\"\r\n                          ref=\"draggableTree\"\r\n                          :allowRowDraggable=\"allow.rowDraggable\"\r\n                          :allowRowDroppable=\"allow.rowDroppable\"\r\n                >\r\n                    <template v-slot:content=\"{row}\">\r\n                        {{row.name}}\r\n                    </template>\r\n                </plc-tree>\r\n                <plc title=\"编号\" field=\"id\"/>\r\n                <plc title=\"名称\" field=\"name\"/>\r\n            </pl-table>\r\n        </demo-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import data from '../../data/tree.data'\r\n    import TreeTableVirtual from \"./tree-table-virtual\";\r\n    import TreeTableVirtualDraggable from \"./tree-table-virtual-draggable\";\r\n\r\n    export default {\r\n        name: \"table-tree\",\r\n        components: {TreeTableVirtualDraggable, TreeTableVirtual},\r\n        data() {\r\n            return {\r\n                data,\r\n                log: (...args) => console.log(...args),\r\n                lazyDemo: {\r\n                    data: [],\r\n                    isLeaf: (node) => {\r\n                        return node.level >= 3\r\n                    },\r\n                    getChildren: (node, resolve) => {\r\n                        switch (node.level) {\r\n                            case 0:\r\n                                // 加载一级数据\r\n                                this.lazyDemo.getCitiesByParentId(null).then(resolve)\r\n                                break\r\n                            case 1:\r\n                                // 加载二级数据\r\n                                this.lazyDemo.getCitiesByParentId(node.data.id).then(resolve)\r\n                                break\r\n                            case 2:\r\n                                // 加载三级数据\r\n                                this.lazyDemo.getCitiesByParentId(node.data.id).then(resolve)\r\n                                break\r\n                            default:\r\n                                return null\r\n                        }\r\n                    },\r\n                    getCitiesByParentId(parentId) {\r\n                        return new Promise((resolve) => {\r\n                            // 这个是模拟在数据库表中的数据\r\n                            const data = [\r\n                                {id: '1', name: '广东省', parentId: null, subs: []},\r\n                                {id: '2', name: '佛山市', parentId: '1', subs: []},\r\n                                {id: '3', name: '深圳市', parentId: '1', subs: []},\r\n                                {id: '4', name: '禅城区', parentId: '2', subs: []},\r\n                                {id: '5', name: '南山区', parentId: '3', subs: []},\r\n\r\n                                {id: '6', name: '湖南省', parentId: null, subs: []},\r\n                                {id: '7', name: '长沙市', parentId: '6', subs: []},\r\n                                {id: '8', name: '邵阳市', parentId: '6', subs: []},\r\n                                {id: '9', name: '天心区', parentId: '7', subs: []},\r\n\r\n                                {id: '11', name: '陕西省', parentId: null, subs: []},\r\n                            ]\r\n\r\n                            // 模拟请求，请求时间大概在1s-2s之间\r\n                            setTimeout(() => {\r\n                                resolve(data.filter(item => item.parentId === parentId))\r\n                            }, Math.random() * 1000 + 1000)\r\n                        })\r\n                    },\r\n                },\r\n                filterText: null,\r\n                filterBindingText: null,\r\n                allow: {\r\n                    rowDraggable: (node) => {\r\n                        return node.level !== 1\r\n                    },\r\n                    rowDroppable: (startNode, moveNode, dropType) => {\r\n                        if (moveNode.level !== 1) {\r\n                            return true\r\n                        }\r\n                        // 这里展示了dropType的几种类型\r\n                        switch (dropType) {\r\n                            case 'prev':\r\n                                return false\r\n                            case 'next':\r\n                                return false\r\n                            case 'inner':\r\n                                return true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            async expandSome() {\r\n                const keys = ['2-2-2', '3-1-2']\r\n                await this.$refs.tree1.expand(keys)\r\n            },\r\n            expandAndSelect() {\r\n                this.$refs.tree1.expand('2-2-2')\r\n                this.$refs.table1.setCurrent('2-2-2')\r\n            },\r\n            customIsCheckable(node) {\r\n                // 名称带字符【2】的记录不能选中\r\n                return node.data.name.indexOf('2') === -1\r\n            },\r\n            customFilterNodeMethod(node) {\r\n                if (!this.filterText) {\r\n                    return true\r\n                } else {\r\n                    return node.data.name.indexOf(this.filterText) > -1\r\n                }\r\n            },\r\n        },\r\n        mounted() {\r\n            // if (!!this.$refs.draggableTree) {\r\n            //     this.$refs.draggableTree.expandAll()\r\n            // }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .table-tree {\r\n    }\r\n</style>","import { render } from \"./table-tree.vue?vue&type=template&id=0889b5aa\"\nimport script from \"./table-tree.vue?vue&type=script&lang=js\"\nexport * from \"./table-tree.vue?vue&type=script&lang=js\"\n\nimport \"./table-tree.vue?vue&type=style&index=0&id=0889b5aa&lang=scss\"\nscript.render = render\n\nexport default script","export * from \"-!../../../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./table-tree.vue?vue&type=style&index=0&id=0889b5aa&lang=scss\""],"sourceRoot":""}
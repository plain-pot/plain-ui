{"version":3,"sources":["webpack:///./src-doc/page/form/form-validate-mode.vue?73b8","webpack:///./src-doc/page/form/form-validate-mode.vue?98f0","webpack:///src-doc/page/form/form-validate-mode.vue","webpack:///./src-doc/page/form/form-validate-mode.vue?c9ff","webpack:///./src-doc/page/form/form-validate-mode.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","ref","model","value","form1","callback","$$v","$set","expression","formData","_l","item","key","code","levelName","directives","name","rawName","domProps","on","$event","target","composing","validateFormMode","form2","validateTableMode","staticRenderFns","err","component"],"mappings":"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","file":"js/chunk-461fabdf.8914dada.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form-validate-mode.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form-validate-mode.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"form-validate-mode\"},[_c('pl-alert',{attrs:{\"status\":\"success\",\"title\":\"edit组件\"}},[_vm._v(\"\\n        以下简称 edit组件 为 “使用了useEdit组合函数进行控制的组件”，原生控件以及其他组件库的组件可以通过useEdit 函数封装变成edit组件；\\n    \")]),_c('demo-row',{attrs:{\"title\":\"默认模式：form\"}},[_c('pl-form',{ref:\"formMode\",attrs:{\"contentWidth\":\"400px\"},model:{value:(_vm.form1.formData),callback:function ($$v) {_vm.$set(_vm.form1, \"formData\", $$v)},expression:\"form1.formData\"}},[_c('pl-form-item',{attrs:{\"label\":\"标准文本框：必填\",\"field\":\"input\",\"required\":\"\"}},[_c('pl-input',{model:{value:(_vm.form1.formData.input),callback:function ($$v) {_vm.$set(_vm.form1.formData, \"input\", $$v)},expression:\"form1.formData.input\"}})],1),_c('pl-form-item',{attrs:{\"label\":\"标准下拉框：必填\",\"field\":\"select\",\"required\":\"\"}},[_c('pl-select',{model:{value:(_vm.form1.formData.select),callback:function ($$v) {_vm.$set(_vm.form1.formData, \"select\", $$v)},expression:\"form1.formData.select\"}},_vm._l((_vm.levelData),function(item){return _c('pl-select-option',{key:item.code,attrs:{\"label\":item.levelName,\"val\":item.code}})}),1)],1),_c('pl-form-item',{attrs:{\"label\":\"自定义组件：必填\",\"field\":\"custom\",\"required\":\"\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.form1.formData.custom),expression:\"form1.formData.custom\"}],domProps:{\"value\":(_vm.form1.formData.custom)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.form1.formData, \"custom\", $event.target.value)}}})]),_c('pl-form-item',{attrs:{\"label\":\" \"}},[_c('pl-button',{attrs:{\"label\":\"校验\"},on:{\"click\":_vm.validateFormMode}})],1)],1),_c('pl-alert',{attrs:{\"title\":\"validateMode = form\"}},[_vm._v(\"\\n            这种模式为表单模式，通过深度 watch model绑定的表单对象，来判断字段变化，然后自动触发 change 校验，这种模式的优点是，\\n            能够兼容所有的双向绑定表单组件，当然包括原生的表单控件。缺点是需要深度 watch表单对象，在表格中这种方式性能比较低。所以在表格中不采取这种方式\\n            触发change校验；\\n        \")])],1),_c('demo-row',{attrs:{\"title\":\"表格模式：table\"}},[_c('pl-form',{ref:\"tableMode\",attrs:{\"contentWidth\":\"400px\",\"validateMode\":\"table\"},model:{value:(_vm.form2.formData),callback:function ($$v) {_vm.$set(_vm.form2, \"formData\", $$v)},expression:\"form2.formData\"}},[_c('pl-form-item',{attrs:{\"label\":\"标准文本框：必填\",\"field\":\"input\",\"required\":\"\"}},[_c('pl-input',{model:{value:(_vm.form2.formData.input),callback:function ($$v) {_vm.$set(_vm.form2.formData, \"input\", $$v)},expression:\"form2.formData.input\"}})],1),_c('pl-form-item',{attrs:{\"label\":\"标准下拉框：必填\",\"field\":\"select\",\"required\":\"\"}},[_c('pl-select',{model:{value:(_vm.form2.formData.select),callback:function ($$v) {_vm.$set(_vm.form2.formData, \"select\", $$v)},expression:\"form2.formData.select\"}},_vm._l((_vm.levelData),function(item){return _c('pl-select-option',{key:item.code,attrs:{\"label\":item.levelName,\"val\":item.code}})}),1)],1),_c('pl-form-item',{attrs:{\"label\":\"自定义组件：必填\",\"field\":\"custom\",\"required\":\"\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.form2.formData.custom),expression:\"form2.formData.custom\"}],domProps:{\"value\":(_vm.form2.formData.custom)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.form2.formData, \"custom\", $event.target.value)}}})]),_c('pl-form-item',{attrs:{\"label\":\" \"}},[_c('pl-button',{attrs:{\"label\":\"校验\"},on:{\"click\":_vm.validateTableMode}})],1)],1),_c('pl-alert',{attrs:{\"title\":\"validateMode = table\"}},[_vm._v(\"\\n            这种模式为表格模式，通过监听form-item中，edit组件的change事件，来触发change校验。这种模式的优点是，\\n            能够精确地知道那个 form-item 的组件发生值绑定变化从而触发校验，缺点是，不兼容edit组件以外的其他组件，包括其他组件库的组件以及原生控件。\\n        \")]),_c('pl-alert',{attrs:{\"status\":\"info\"}},[_vm._v(\"\\n            还有一个变化是，如果一个form-item的field是一个数组，就是校验多个字段的意思，当其中一个字段的值变化了，那么form模式下只会触发这个变化的字段\\n            的相关校验，而table模式下，会触发form-item上field中所有字段的校验；\\n        \")]),_c('pl-alert',{attrs:{\"status\":\"warn\"}},[_vm._v(\"\\n            无论何种模式下，blur校验只能是edit组件有效。\\n        \")]),_c('pl-alert',{attrs:{\"status\":\"success\"}},[_vm._v(\"\\n            当调用 form 组件的 validate函数时，会触发所有校验，这个与是否为edit组件无关。\\n        \")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"form-validate-mode\">\r\n        <pl-alert status=\"success\" title=\"edit组件\">\r\n            以下简称 edit组件 为 “使用了useEdit组合函数进行控制的组件”，原生控件以及其他组件库的组件可以通过useEdit 函数封装变成edit组件；\r\n        </pl-alert>\r\n        <demo-row title=\"默认模式：form\">\r\n            <pl-form v-model=\"form1.formData\" contentWidth=\"400px\" ref=\"formMode\">\r\n                <pl-form-item label=\"标准文本框：必填\" field=\"input\" required>\r\n                    <pl-input v-model=\"form1.formData.input\"/>\r\n                </pl-form-item>\r\n                <pl-form-item label=\"标准下拉框：必填\" field=\"select\" required>\r\n                    <pl-select v-model=\"form1.formData.select\">\r\n                        <pl-select-option v-for=\"item in levelData\" :label=\"item.levelName\" :val=\"item.code\" :key=\"item.code\"/>\r\n                    </pl-select>\r\n                </pl-form-item>\r\n                <pl-form-item label=\"自定义组件：必填\" field=\"custom\" required>\r\n                    <input v-model=\"form1.formData.custom\"/>\r\n                </pl-form-item>\r\n                <pl-form-item label=\" \">\r\n                    <pl-button @click=\"validateFormMode\" label=\"校验\"/>\r\n                </pl-form-item>\r\n            </pl-form>\r\n            <pl-alert title=\"validateMode = form\">\r\n                这种模式为表单模式，通过深度 watch model绑定的表单对象，来判断字段变化，然后自动触发 change 校验，这种模式的优点是，\r\n                能够兼容所有的双向绑定表单组件，当然包括原生的表单控件。缺点是需要深度 watch表单对象，在表格中这种方式性能比较低。所以在表格中不采取这种方式\r\n                触发change校验；\r\n            </pl-alert>\r\n        </demo-row>\r\n        <demo-row title=\"表格模式：table\">\r\n            <pl-form v-model=\"form2.formData\" contentWidth=\"400px\" ref=\"tableMode\" validateMode=\"table\">\r\n                <pl-form-item label=\"标准文本框：必填\" field=\"input\" required>\r\n                    <pl-input v-model=\"form2.formData.input\"/>\r\n                </pl-form-item>\r\n                <pl-form-item label=\"标准下拉框：必填\" field=\"select\" required>\r\n                    <pl-select v-model=\"form2.formData.select\">\r\n                        <pl-select-option v-for=\"item in levelData\" :label=\"item.levelName\" :val=\"item.code\" :key=\"item.code\"/>\r\n                    </pl-select>\r\n                </pl-form-item>\r\n                <pl-form-item label=\"自定义组件：必填\" field=\"custom\" required>\r\n                    <input v-model=\"form2.formData.custom\"/>\r\n                </pl-form-item>\r\n                <pl-form-item label=\" \">\r\n                    <pl-button @click=\"validateTableMode\" label=\"校验\"/>\r\n                </pl-form-item>\r\n            </pl-form>\r\n            <pl-alert title=\"validateMode = table\">\r\n                这种模式为表格模式，通过监听form-item中，edit组件的change事件，来触发change校验。这种模式的优点是，\r\n                能够精确地知道那个 form-item 的组件发生值绑定变化从而触发校验，缺点是，不兼容edit组件以外的其他组件，包括其他组件库的组件以及原生控件。\r\n            </pl-alert>\r\n            <pl-alert status=\"info\">\r\n                还有一个变化是，如果一个form-item的field是一个数组，就是校验多个字段的意思，当其中一个字段的值变化了，那么form模式下只会触发这个变化的字段\r\n                的相关校验，而table模式下，会触发form-item上field中所有字段的校验；\r\n            </pl-alert>\r\n            <pl-alert status=\"warn\">\r\n                无论何种模式下，blur校验只能是edit组件有效。\r\n            </pl-alert>\r\n            <pl-alert status=\"success\">\r\n                当调用 form 组件的 validate函数时，会触发所有校验，这个与是否为edit组件无关。\r\n            </pl-alert>\r\n        </demo-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"form-validate-mode\",\r\n        data() {\r\n            return {\r\n                form1: {\r\n                    formData: {},\r\n                },\r\n                form2: {\r\n                    formData: {},\r\n                },\r\n                levelData: [\r\n                    {levelName: '一级', code: '1'},\r\n                    {levelName: '二级', code: '2'},\r\n                    {levelName: '三级', code: '3'},\r\n                ],\r\n            }\r\n        },\r\n        methods: {\r\n            async validateFormMode() {\r\n                const err = await this.$refs.formMode.methods.validate()\r\n                if (!!err) {\r\n                    this.$refs.formMode.methods.showError(err)\r\n                } else {\r\n                    this.$message.success('校验通过')\r\n                }\r\n            },\r\n            async validateTableMode() {\r\n                const err = await this.$refs.tableMode.methods.validate()\r\n                if (!!err) {\r\n                    this.$refs.tableMode.methods.showError(err)\r\n                } else {\r\n                    this.$message.success('校验通过')\r\n                }\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .form-validate-mode {\r\n        .pl-alert {\r\n            margin: 10px 0;\r\n        }\r\n    }\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form-validate-mode.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form-validate-mode.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./form-validate-mode.vue?vue&type=template&id=64b6b200&\"\nimport script from \"./form-validate-mode.vue?vue&type=script&lang=js&\"\nexport * from \"./form-validate-mode.vue?vue&type=script&lang=js&\"\nimport style0 from \"./form-validate-mode.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
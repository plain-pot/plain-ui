@import "../components/index.scss";

@mixin generateThemeContent($name,$theme) {
  $globalTheme: $theme !global;

  $colorPrimary: plvar(colorPrimary) !global;
  $colorSuccess: plvar(colorSuccess) !global;
  $colorWarn: plvar(colorWarn) !global;
  $colorError: plvar(colorError) !global;
  $colorInfo: plvar(colorInfo) !global;
  $disabled: plvar(disabled) !global;
  $disabledLight: plvar(disabledLight) !global;
  $disabledDeep: plvar(disabledDeep) !global;
  $disabledText: plvar(disabledText) !global;
  $font: plvar(font) !global;
  $ibc: plvar(ibc) !global;
  $itc: plvar(itc) !global;
  $ihc: plvar(ihc) !global;
  $ipc: plvar(ipc) !global;
  $icc: plvar(icc) !global;
  $transitionFlexible: plvar(transitionFlexible) !global;
  $transition: plvar(transition) !global;
  $transition2: plvar(transition2) !global;

  @if (str_length($name)>0) {
    .theme-#{$name} {
      font-family: $font;
      @content;
    }
  } @else {
    html {
      font-family: $font;
      @content;
    }
  }
}

@mixin generateTheme($themes) {
  @each $curThemeName, $curTheme in $themes {
    @include generateThemeContent($curThemeName, $curTheme) {
      @include component-index;
    }
  }
}

@mixin statusMixin($component) {
  @each $key in (Primary, Success, Warn, Error, Info) {

    $value: plvar(color#{$key}) !global;

    $name: to-lower-case($key) !global;
    &.pl-#{$component}-status-#{$name} {
      @content;
    }
  }
}

@mixin shapeMixin($component) {
  @each $key in (Fillet, Round, Square) {

    $value: plvar(shape#{$key}) !global;
    $name: to-lower-case($key) !global;

    &.pl-#{$component}-shape-#{$name} {
      @content;
    }
  }
}

@mixin sizeMixin($component) {
  @each $key in (Large, Normal, Mini) {

    $value: plvar(size#{$key}) !global;
    $name: to-lower-case($key) !global;

    &.pl-#{$component}-size-#{$name} {
      @content;
    }
  }
}

@mixin public-style {
  box-sizing: border-box;
  font-weight: 400;
  color: $itc;
  margin: 0;
  padding: 0;
}
@mixin component-button {
  .pl-button {
    vertical-align: middle;
    box-sizing: border-box;
    border: solid 1px;
    cursor: pointer;
    transition: all 0.2s linear;
    outline: none;
    position: relative;
    text-align: center;
    @include public-style;

    @include sizeMixin(button) {
      height: $value;
      line-height: $value;

      &.pl-button-size-large {
        padding: 0 32px;
        font-size: 18px;
      }
      &.pl-button-size-mini {
        padding: 0 6px;
        min-width: initial;
        font-size: 12px;
      }
      &.pl-button-size-normal {
        font-size: 14px;
      }

      &.pl-button-icon-only {
        width: $value;
        padding: 0;
        min-width: auto;

        &.pl-button-mode-text {
          border-radius: 100px;

          &:hover {
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
          }
        }
      }
    }

    @include shapeMixin(button) {
      border-radius: $value;
    }

    &.pl-button-mode-fill {
      padding: 0 16px;
      min-width: 64px;

      @include statusMixin(button) {
        background-color: $value;
        border-color: $value;
        color: white;

        &:hover {
          background-color: rgba($value, 0.65);
          border-color: rgba($value, 0.65);
        }
        &:active, &.pl-button-active {
          background-color: mix(black, $value, 20%);
          border-color: $value;
        }
        &:after {
          border-color: $value;
        }

      }
    }

    &.pl-button-mode-stroke {
      padding: 0 16px;
      min-width: 64px;

      @include statusMixin(button) {
        border-color: $value;
        color: $value;
        background-color: white;

        &:hover {
          background-color: rgba($value, 0.1);
        }

        &:active, &.pl-button-active {
          background-color: rgba($value, 0.35);
          border-color: rgba($value, 0.35);
        }

        &:after {
          border-color: $value;
        }
      }
    }

    &.pl-button-mode-text {
      border-color: transparent;
      background-color: transparent;
      padding: 0;

      &:not(.pl-button-icon-only) {
        height: auto;
        line-height: normal;
      }

      @include statusMixin(button) {
        color: $value;
        &:active, &.pl-button-active {
          color: rgba($value, 0.5);
        }
      }

      &:not(.pl-button-icon-only):after {
        display: none;
      }
    }

    &.pl-button-disabled {
      cursor: not-allowed;

      &.pl-button-mode-fill, &.pl-button-mode-stroke {
        border-color: #d3d3d3 !important;
        color: $disabledText !important;
        background-color: $disabled !important;
      }

      &.pl-button-mode-text {
        color: #999 !important;
      }
    }

    &:focus {
      text-decoration: underline;
    }

    &.pl-button-block {
      width: 100%;
      display: block;
    }

    & > .pl-loading, & > .pl-icon, & > span {
      & + * {
        margin-left: 3px;
      }
    }
  }

  .pl-button-group {
    display: inline-block;
    vertical-align: middle;
    box-sizing: border-box;

    .pl-button {
      position: relative;

      &:focus {
        z-index: 1;
      }
    }

    &.pl-button-group-direction-horizontal {
      & > .pl-button {
        &:not(:last-child) {
          border-top-right-radius: 0;
          border-bottom-right-radius: 0;
          margin-right: -1px;
          @include statusMixin(button) {
            border-right-color: mix(white, $value, 50%);
          }
        }

        &:not(:first-child) {
          border-top-left-radius: 0;
          border-bottom-left-radius: 0;
          margin-left: -1px;
          @include statusMixin(button) {
            border-left-color: mix(white, $value, 50%);
          }
        }
      }

      &.pl-button-group-mode-text {
        & > .pl-button {

          padding: 0 6px;
          position: relative;

          &:not(:last-child) {
            border-right: none;

            &:before {
              position: absolute;
              content: '';
              background-color: #aaa;
              right: 0;
              top: 3px;
              bottom: 3px;
              width: 1px;
            }
          }

          &:not(:first-child) {
            border-left: none;
          }
        }
      }
    }


    &.pl-button-group-direction-vertical {
      display: inline-flex;
      flex-direction: column;

      & > .pl-button {
        display: block;

        &:not(:last-child) {
          border-bottom-left-radius: 0;
          border-bottom-right-radius: 0;
          margin-bottom: -1px;
          @include statusMixin(button) {
            border-bottom-color: mix(white, $value, 50%);
          }
        }

        &:not(:first-child) {
          border-top-left-radius: 0;
          border-top-right-radius: 0;
          margin-top: -1px;
          @include statusMixin(button) {
            border-top-color: mix(white, $value, 50%);
          }
        }

        &.pl-button-mode-text {
          padding: 3px 0;
        }
      }
    }

  }

}